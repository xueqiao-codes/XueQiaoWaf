<UserControl x:Class="XueQiaoWaf.Trade.Modules.Presentation.Views.PlaceOrderCreateConditionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:native_trade="clr-namespace:NativeModel.Trade;assembly=NativeModel"
             xmlns:hosting_arbitrage="clr-namespace:xueqiao.trade.hosting.arbitrage.thriftapi;assembly=IDLAutoGenerated"
             xmlns:datamodel="clr-namespace:XueQiaoWaf.Trade.Modules.Applications.DataModels;assembly=XueQiaoWaf.Trade.Modules.Applications"
             xmlns:vm="clr-namespace:XueQiaoWaf.Trade.Modules.Applications.ViewModels;assembly=XueQiaoWaf.Trade.Modules.Applications"
             xmlns:convert="clr-namespace:XueQiaoFoundation.BusinessResources.Converters;assembly=XueQiaoFoundation.BusinessResources"
             xmlns:uiconvert="clr-namespace:XueQiaoFoundation.UI.Converters;assembly=XueQiaoFoundation.UI"
             xmlns:uiextra_convert="clr-namespace:XueQiaoFoundation.UI.Extra.converter;assembly=XueQiaoFoundation.UI.Extra"
             xmlns:MahAppsMetroControls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             xmlns:uicontrols="clr-namespace:XueQiaoFoundation.UI.Controls;assembly=XueQiaoFoundation.UI"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:helper="clr-namespace:XueQiaoFoundation.Shared.Helper;assembly=XueQiaoFoundation.Shared"
             xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             mc:Ignorable="d" 
             d:DataContext="{x:Type vm:PlaceOrderCreateConditionVM}"
             d:DesignHeight="300" d:DesignWidth="200">
    <UserControl.Resources>
        <convert:HostingXQEffectDateType2NameConverter x:Key="HostingXQEffectDateType2NameConverter"/>
        <convert:HostingXQConditionTriggerPriceType2NameConverter x:Key="HostingXQConditionTriggerPriceType2NameConverter"/>
        <convert:HostingXQConditionTriggerOperator2SymbolConverter x:Key="HostingXQConditionTriggerOperator2SymbolConverter"/>
        <uiextra_convert:Timestamp2DateTimeConverter x:Key="Timestamp2DateTimeConverter"/>
        <uiconvert:EqualityToVisibilityConverter x:Key="Equal2VisibleConverter" 
                                                 CollapsedWhenEquals="False" CollapsedWhenNotEquals="True"/>
        <sys:Int32 x:Key="IntZero">0</sys:Int32>
        <uiconvert:EqualityToVisibilityConverter x:Key="Equal2CollapsedConverter" 
                                                 CollapsedWhenEquals="True" CollapsedWhenNotEquals="False"/>

        <CollectionViewSource x:Key="ComposeOrderEPTsCVS" Source="{Binding Path=ComposeOrderEPTs}" IsLiveSortingRequested="True">
            <CollectionViewSource.LiveSortingProperties>
                <sys:String>CreateTimestampMs</sys:String>
            </CollectionViewSource.LiveSortingProperties>
            <CollectionViewSource.SortDescriptions>
                <ComponentModel:SortDescription PropertyName="CreateTimestampMs" Direction="Ascending" />
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>

        <Style TargetType="TextBlock" 
               x:Key="SmallText">
            <Setter Property="FontSize" Value="{DynamicResource SecondaryContentFontSize}"/>
        </Style>

        <Style TargetType="TextBlock" BasedOn="{StaticResource SmallText}"
               x:Key="PlaceOrderHeaderText">
            <Setter Property="Foreground" Value="{DynamicResource ContentBrush2}"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>
    </UserControl.Resources>
    <StackPanel Orientation="Vertical">
        <StackPanel 
            Orientation="Vertical"
            Visibility="{Binding PlaceOrderViewCreateDrama.ViewOrderTargetType, Converter={StaticResource Equal2VisibleConverter}, ConverterParameter={x:Static native_trade:ClientXQOrderTargetType.COMPOSE_TARGET}}">
            <TextBlock Style="{StaticResource PlaceOrderHeaderText}" Text="触发执行方式：" />
            <ComboBox 
                x:Name="ComposeOrderEPTsComboBox"
                IsSynchronizedWithCurrentItem="True"
                SelectionChanged="ComposeOrderEPTsComboBox_SelectionChanged"
                SelectedItem="{Binding SelectedComposeOrderEPT, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <!-- ItemsSource -->
                <ComboBox.ItemsSource>
                    <CompositeCollection>
                        <CollectionContainer Collection="{Binding Source={StaticResource ComposeOrderEPTsCVS}}"/>
                        <ComboBoxItem x:Name="ToEPTManageComboBoxItem" Padding="0" Margin="0">
                            <StackPanel Orientation="Vertical" Margin="2">
                                <Rectangle HorizontalAlignment="Stretch" Height="1" Fill="{DynamicResource BorderBrush2}"
                                           Visibility="{Binding ComposeOrderEPTs.Count, Converter={StaticResource Equal2CollapsedConverter}, ConverterParameter={StaticResource IntZero}}"/>
                                <Button 
                                    Margin="0,4,0,0"
                                    Style="{StaticResource FlatContentButtonPrimary3}"
                                    HorizontalAlignment="Left"
                                    Content="触发执行设置"
                                    Command="{Binding ToComposeOrderEPTManageCmd}"
                                    x:Name="ToComposeOrderEPTManageButn"
                                    Click="ToComposeOrderEPTManageButn_Click"/>
                            </StackPanel>
                        </ComboBoxItem>
                    </CompositeCollection>
                </ComboBox.ItemsSource>

                <!-- ItemTemplate -->
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <StackPanel Orientation="Vertical" 
                    Visibility="{Binding PlaceOrderViewCreateDrama.SupportEffectDateTypeValues.Count, Converter={StaticResource Equal2CollapsedConverter}, ConverterParameter={StaticResource IntZero}}">
            <StackPanel Orientation="Vertical" >
                <TextBlock Style="{StaticResource PlaceOrderHeaderText}" Text="有效时间：" />
                <ComboBox 
                    ItemsSource="{Binding PlaceOrderViewCreateDrama.SupportEffectDateTypeValues}"
                    IsSynchronizedWithCurrentItem="True"
                    SelectedItem="{Binding PlaceOrderViewCreateDrama.SelectedEffectDateTypeValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type hosting_arbitrage:HostingXQEffectDate}">
                            <TextBlock Text="{Binding Type, Converter={StaticResource HostingXQEffectDateType2NameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>
            <DockPanel 
                Margin="0,8,0,0"
                Visibility="{Binding PlaceOrderViewCreateDrama.SelectedEffectDateTypeValue.Type,
                            Converter={StaticResource Equal2VisibleConverter}, 
                            ConverterParameter={x:Static hosting_arbitrage:HostingXQEffectDateType.XQ_EFFECT_PERIOD}}">
                <TextBlock Margin="4,0,0,0" DockPanel.Dock="Right" VerticalAlignment="Center">前</TextBlock>
                <MahAppsMetroControls:DateTimePicker
                    DockPanel.Dock="Left"
                    Style="{StaticResource XQDateTimePickerBase}"
                    IsEnabled="True"
                    IsReadOnly="False"
                    Orientation="Horizontal"
                    PickerVisibility="All"
                    IsTodayHighlighted="True"
                    Culture="{x:Static helper:DateHelper.DefaultDateTimePickerCulture}"
                    SelectedDateFormat="Short"
                    SelectedTimeFormat="Long" 
                    SelectedDate="{Binding PlaceOrderViewCreateDrama.SelectedEffectDateTypeValue.EndEffectTimestampS, 
                        Mode=TwoWay,
                        Converter={StaticResource Timestamp2DateTimeConverter},
                        UpdateSourceTrigger=PropertyChanged}" />
            </DockPanel>
        </StackPanel>


        <StackPanel Orientation="Vertical" Margin="0,10,0,0">
            <TextBlock Style="{StaticResource PlaceOrderHeaderText}" Text="触发条件：" />
            <Grid>
                <!-- TextDescription 类型触发器 -->
                <TextBlock Visibility="{Binding PlaceOrderViewCreateDrama.OrderTriggerDisplayModel.TriggerDisplayType, 
                                Converter={StaticResource Equal2VisibleConverter}, 
                                ConverterParameter={x:Static datamodel:XQOrderTriggerDisplayType.TextDescription}}"
                           Text="{Binding PlaceOrderViewCreateDrama.OrderTriggerDisplayModel.TextTriggerDescription}"/>


                <!-- TriggerNeedConfig 类型触发器 -->
                <StackPanel Grid.IsSharedSizeScope="True"
                            Visibility="{Binding PlaceOrderViewCreateDrama.OrderTriggerDisplayModel.TriggerDisplayType,
                                Converter={StaticResource Equal2VisibleConverter},
                                ConverterParameter={x:Static datamodel:XQOrderTriggerDisplayType.TriggerNeedConfig}}">
                    <HeaderedContentControl Header="若" Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                        <ComboBox ItemsSource="{Binding PlaceOrderViewCreateDrama.OrderTriggerDisplayModel.SupportConfigTriggerPriceTypes}"
                                  SelectedItem="{Binding PlaceOrderViewCreateDrama.OrderTriggerDisplayModel.ConfigTrigger.TriggerPriceType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type hosting_arbitrage:HostingXQConditionTriggerPriceType}">
                                    <TextBlock Text="{Binding Converter={StaticResource HostingXQConditionTriggerPriceType2NameConverter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </HeaderedContentControl>
                    <HeaderedContentControl 
                        Margin="0,4,0,0"
                        Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}"
                        Header="{Binding PlaceOrderViewCreateDrama.OrderTriggerDisplayModel.ConfigTrigger.TriggerOperator, Converter={StaticResource HostingXQConditionTriggerOperator2SymbolConverter}}">
                        <uicontrols:NumericUpDown
                            Value="{Binding PlaceOrderViewCreateDrama.OrderTriggerDisplayModel.ConfigTrigger.ConditionPrice, 
                                Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            SnapToMultipleOfInterval="False"/>
                    </HeaderedContentControl>
                </StackPanel>
            </Grid>
        </StackPanel>

        <TextBlock Margin="0,8,0,0" 
                   Style="{StaticResource SmallText}"
                   Foreground="{DynamicResource MinorBrush1}"
                   Text="{Binding PlaceOrderViewCreateDrama.PlaceOrderAvailableTimeDescription}"/>

    </StackPanel>
</UserControl>

<UserControl x:Class="XueQiaoWaf.Trade.Modules.Presentation.Views.PlaceOrderConfirmView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:styles="clr-namespace:XueQiaoFoundation.UI.Styles;assembly=XueQiaoFoundation.UI"
             xmlns:convert="clr-namespace:XueQiaoFoundation.BusinessResources.Converters;assembly=XueQiaoFoundation.BusinessResources"
             xmlns:uiconvert="clr-namespace:XueQiaoFoundation.UI.Converters;assembly=XueQiaoFoundation.UI"
             xmlns:uiextra_convert="clr-namespace:XueQiaoFoundation.UI.Extra.converter;assembly=XueQiaoFoundation.UI.Extra"
             xmlns:trade_model="clr-namespace:NativeModel.Trade;assembly=NativeModel"
             xmlns:arbitrage="clr-namespace:xueqiao.trade.hosting.arbitrage.thriftapi;assembly=IDLAutoGenerated"
             mc:Ignorable="d" 
             MinWidth="280" MaxWidth="450"
             x:Name="ViewRoot">
    <UserControl.Resources>

        <uiconvert:EqualityToVisibilityConverter x:Key="Equal2Visible" CollapsedWhenEquals="False" CollapsedWhenNotEquals="True"/>
       
        <convert:ClientXQOrderTargetType2NameConverter x:Key="TargetType2Name" />
        <convert:HostingXQOrderType2NameConverter x:Key="HostingXQOrderType2NameConverter" IncludeTargetTypeName="False"/>
        <convert:TradeDirection2NameConverter x:Key="TradeDirection2Name" />
        <uiextra_convert:Timestamp2StringConverter x:Key="Second2DateTimeStrConverter" Convert2StringFormatType="DateTime" ValueType="Second"/>
        <convert:HostingXQEffectDateType2NameConverter x:Key="HostingXQEffectDateType2NameConverter"/>
        <convert:HostingXQConditionOrderLabel2NameConverter x:Key="HostingXQConditionOrderLabel2NameConverter"/>
        <convert:HostingXQOrderPrice2DisplayTextConverter x:Key="HostingXQOrderPrice2DisplayTextConverter"/>
        <convert:HostingXQConditionTrigger2DisplayTextConverter x:Key="HostingXQConditionTrigger2DisplayTextConverter"/>
        <convert:OrderExecParams2SendTypeNameConverter x:Key="OrderExecParams2SendTypeNameConverter"/>

        
        <Style TargetType="{x:Type HeaderedContentControl}" BasedOn="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
            <Setter Property="styles:HeaderedContentControlHelper.HorizonalColumnSpacing" Value="6"/>
            <Setter Property="styles:HeaderedContentControlHelper.HorizonalHeaderColumnSharedSizeGroup" Value="PlaceOrderConfirmItemHorizonalHeaderColumnSharedSizeGroup"/>
            <Setter Property="Margin" Value="0,6,0,0"/>
        </Style>

        <DataTemplate x:Key="TargetTypeHeaderDT">
            <TextBlock>
                <Run Text="{Binding ElementName=ViewRoot, Path=DataContext.OrderTarget.TargetType, Mode=OneWay, Converter={StaticResource TargetType2Name}}"/><Run Text="："/>
            </TextBlock>
        </DataTemplate>

        <!-- `合约委托单`确认订单内容 data template -->
        <DataTemplate x:Key="Contract_EntrustedOrder_ConfirmContentDT">
            <StackPanel Grid.IsSharedSizeScope="True">
                <HeaderedContentControl HeaderTemplate="{StaticResource TargetTypeHeaderDT}">
                    <TextBlock Text="{Binding OrderTarget.TargetName}" TextWrapping="Wrap"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="类型：" Content="{Binding OrderType, Converter={StaticResource HostingXQOrderType2NameConverter}}"/>
                <HeaderedContentControl Header="数量：" Content="{Binding OrderDetail.ContractLimitOrderDetail.Quantity}"/>
                <HeaderedContentControl Header="价格：" Content="{Binding OrderDetail.ContractLimitOrderDetail.LimitPrice}"/>
                <HeaderedContentControl Header="方向：" Content="{Binding OrderDetail.ContractLimitOrderDetail.Direction, Converter={StaticResource TradeDirection2Name}}"/>
                <HeaderedContentControl Header="有效期类型：" Content="{Binding OrderDetail.ContractLimitOrderDetail.EffectDate.Type, Converter={StaticResource HostingXQEffectDateType2NameConverter}}"/>
                
                <HeaderedContentControl 
                    Header="有效结束时间：" 
                    Content="{Binding OrderDetail.ContractLimitOrderDetail.EffectDate.EndEffectTimestampS, Converter={StaticResource Second2DateTimeStrConverter}}"
                    Visibility="{Binding OrderDetail.ContractLimitOrderDetail.EffectDate.Type, Converter={StaticResource Equal2Visible}, ConverterParameter={x:Static arbitrage:HostingXQEffectDateType.XQ_EFFECT_PERIOD}}"/>

                <HeaderedContentControl Header="操作账户：" Content="{Binding OrderSubAccountFields.SubAccountName}"/>
            </StackPanel>
        </DataTemplate>

        <!-- `组合委托单`确认订单内容 data template -->
        <DataTemplate x:Key="Compose_EntrustedOrder_ConfirmContentDT">
            <StackPanel Grid.IsSharedSizeScope="True">
                <HeaderedContentControl HeaderTemplate="{StaticResource TargetTypeHeaderDT}">
                    <TextBlock Text="{Binding OrderTarget.TargetName}" TextWrapping="Wrap"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="类型：" Content="{Binding OrderType, Converter={StaticResource HostingXQOrderType2NameConverter}}"/>
                <HeaderedContentControl Header="数量：" Content="{Binding OrderDetail.ComposeLimitOrderDetail.Quantity}"/>
                <HeaderedContentControl Header="价格：" Content="{Binding OrderDetail.ComposeLimitOrderDetail.LimitPrice}"/>
                <HeaderedContentControl Header="方向：" Content="{Binding OrderDetail.ComposeLimitOrderDetail.Direction, Converter={StaticResource TradeDirection2Name}}"/>

                <HeaderedContentControl Header="触发执行方式：" Content="{Binding OrderDetail.ComposeLimitOrderDetail.ExecParams, Converter={StaticResource OrderExecParams2SendTypeNameConverter}}"/>

                <HeaderedContentControl Header="有效期类型：" Content="{Binding OrderDetail.ComposeLimitOrderDetail.EffectDate.Type, Converter={StaticResource HostingXQEffectDateType2NameConverter}}"/>
                
                <HeaderedContentControl 
                    Header="有效结束时间：" 
                    Content="{Binding OrderDetail.ComposeLimitOrderDetail.EffectDate.EndEffectTimestampS, Converter={StaticResource Second2DateTimeStrConverter}}"
                    Visibility="{Binding OrderDetail.ComposeLimitOrderDetail.EffectDate.Type, Converter={StaticResource Equal2Visible}, ConverterParameter={x:Static arbitrage:HostingXQEffectDateType.XQ_EFFECT_PERIOD}}"/>

                <HeaderedContentControl Header="操作账户：" Content="{Binding OrderSubAccountFields.SubAccountName}"/>
            </StackPanel>
        </DataTemplate>

        <!-- `条件单`确认订单内容 data template -->
        <DataTemplate x:Key="ConditionOrder_ConfirmContentDT">
            <StackPanel Grid.IsSharedSizeScope="True">
                <HeaderedContentControl HeaderTemplate="{StaticResource TargetTypeHeaderDT}">
                    <TextBlock Text="{Binding OrderTarget.TargetName}" TextWrapping="Wrap"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="类型：" Content="{Binding OrderDetail.ConditionOrderDetail.Label, Converter={StaticResource HostingXQConditionOrderLabel2NameConverter}}"/>
                <HeaderedContentControl Header="数量：" Content="{Binding OrderDetail.ConditionOrderDetail.Conditions[0].ConditionAction.Quantity, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}, FallbackValue={StaticResource NullValueDataDefaultDisplayText}}"/>
                <HeaderedContentControl Header="价格：">
                    <TextBlock Text="{Binding OrderDetail.ConditionOrderDetail.Conditions[0].ConditionAction.Price, Converter={StaticResource HostingXQOrderPrice2DisplayTextConverter}, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}, FallbackValue={StaticResource NullValueDataDefaultDisplayText}}"
                               TextWrapping="Wrap"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="方向：" Content="{Binding OrderDetail.ConditionOrderDetail.Conditions[0].ConditionAction.TradeDirection, Converter={StaticResource TradeDirection2Name}, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}, FallbackValue={StaticResource NullValueDataDefaultDisplayText}}"/>

                <HeaderedContentControl Header="触发执行方式：" Content="{Binding OrderDetail.ConditionOrderDetail.Conditions[0].ConditionAction.Extra.ComposeLimitExecParams, Converter={StaticResource OrderExecParams2SendTypeNameConverter}}"
                                        Visibility="{Binding TargetType, Converter={StaticResource Equal2Visible}, ConverterParameter={x:Static trade_model:ClientXQOrderTargetType.COMPOSE_TARGET}}"/>

                <HeaderedContentControl Header="有效期类型：" Content="{Binding OrderDetail.ConditionOrderDetail.EffectDate.Type, Converter={StaticResource HostingXQEffectDateType2NameConverter}}"/>
                
                <HeaderedContentControl 
                    Header="有效结束时间：" 
                    Content="{Binding OrderDetail.ConditionOrderDetail.EffectDate.EndEffectTimestampS, Converter={StaticResource Second2DateTimeStrConverter}}"
                    Visibility="{Binding OrderDetail.ConditionOrderDetail.EffectDate.Type, Converter={StaticResource Equal2Visible}, ConverterParameter={x:Static arbitrage:HostingXQEffectDateType.XQ_EFFECT_PERIOD}}"/>


                <HeaderedContentControl Header="触发条件：">
                    <TextBlock Text="{Binding OrderDetail.ConditionOrderDetail.Conditions[0].ConditionTrigger, Converter={StaticResource HostingXQConditionTrigger2DisplayTextConverter}, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}, FallbackValue={StaticResource NullValueDataDefaultDisplayText}}"
                               TextWrapping="Wrap"/>
                </HeaderedContentControl>

                <HeaderedContentControl Header="操作账户：" Content="{Binding OrderSubAccountFields.SubAccountName}"/>
            </StackPanel>
        </DataTemplate>

        <!-- `合约预埋单`确认订单内容 data template -->
        <DataTemplate x:Key="Contract_ParkedOrder_ConfirmContentDT">
            <StackPanel Grid.IsSharedSizeScope="True">
                <HeaderedContentControl HeaderTemplate="{StaticResource TargetTypeHeaderDT}">
                    <TextBlock Text="{Binding OrderTarget.TargetName}" TextWrapping="Wrap"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="类型：" Content="{Binding OrderType, Converter={StaticResource HostingXQOrderType2NameConverter}}"/>
                <HeaderedContentControl Header="数量：" Content="{Binding OrderDetail.ContractParkedOrderDetail.Quantity}"/>
                <HeaderedContentControl Header="价格：">
                    <TextBlock Text="{Binding OrderDetail.ContractParkedOrderDetail.Price, Converter={StaticResource HostingXQOrderPrice2DisplayTextConverter}, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}, FallbackValue={StaticResource NullValueDataDefaultDisplayText}}"
                               TextWrapping="Wrap"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="方向：" Content="{Binding OrderDetail.ContractParkedOrderDetail.Direction, Converter={StaticResource TradeDirection2Name}}"/>

                <HeaderedContentControl Header="操作账户：" Content="{Binding OrderSubAccountFields.SubAccountName}"/>
            </StackPanel>
        </DataTemplate>
    </UserControl.Resources>
    
    <Grid Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <ContentControl Grid.Row="0" Content="{Binding}">
            <ContentControl.Style>
                <Style TargetType="ContentControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding OrderType}" Value="{x:Static arbitrage:HostingXQOrderType.XQ_ORDER_CONTRACT_LIMIT}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Contract_EntrustedOrder_ConfirmContentDT}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding OrderType}" Value="{x:Static arbitrage:HostingXQOrderType.XQ_ORDER_CONTRACT_PARKED}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Contract_ParkedOrder_ConfirmContentDT}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding OrderType}" Value="{x:Static arbitrage:HostingXQOrderType.XQ_ORDER_CONDITION}">
                            <Setter Property="ContentTemplate" Value="{StaticResource ConditionOrder_ConfirmContentDT}"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding OrderType}" Value="{x:Static arbitrage:HostingXQOrderType.XQ_ORDER_COMPOSE_LIMIT}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Compose_EntrustedOrder_ConfirmContentDT}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContentControl.Style>
        </ContentControl>

        <CheckBox Grid.Row="1" Margin="0,20,0,0"
                  IsChecked="{Binding NotConfirmNextTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Content="不再提示（可在系统设置中再次打开）"
                  Foreground="{DynamicResource ContentBrush3}"/>
    </Grid>
</UserControl>

<UserControl x:Class="XueQiaoWaf.Trade.Modules.Presentation.Views.PositionOfComposeAddView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mycotrls="clr-namespace:XueQiaoFoundation.UI.Controls;assembly=XueQiaoFoundation.UI"
             xmlns:uiconvert="clr-namespace:XueQiaoFoundation.UI.Converters;assembly=XueQiaoFoundation.UI"
             xmlns:convert="clr-namespace:XueQiaoFoundation.BusinessResources.Converters;assembly=XueQiaoFoundation.BusinessResources"
             xmlns:dm="clr-namespace:XueQiaoWaf.Trade.Modules.Applications.DataModels;assembly=XueQiaoWaf.Trade.Modules.Applications"
             xmlns:selector="clr-namespace:XueQiaoWaf.Trade.Modules.Presentation.Selector"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             Width="500" MinHeight="300"
             x:Name="ViewRoot">

    <UserControl.Resources>
        <uiconvert:IsNull2VisibilityConverter x:Key="Null2CollapsedConverter" NullTargetVisibility="Collapsed" NotNullTargetVisibility="Visible"/>
        <uiconvert:EqualityToBooleanConverter x:Key="Equal2TrueConverter"/>
        <uiconvert:NotEqualToBooleanConverter x:Key="NotEqual2TrueConverter"/>
        <convert:TradeDirection2NameConverter x:Key="TradeDirection2NameConverter"/>
        <sys:Double x:Key="Double_1">1</sys:Double>
        <sys:Boolean x:Key="FalseValue">False</sys:Boolean>
       
        <DataTemplate x:Key="PriceDiffTypeInputItemHeaderTemplate"
                      DataType="{x:Type dm:ComposePositionPriceInputItem}">
            <TextBlock Text="价差:"/>
        </DataTemplate>

        <DataTemplate x:Key="LegPriceTypeInputItemHeaderTemplate"
                      DataType="{x:Type dm:ComposePositionPriceInputItem}">
            <TextBlock Text="{Binding LegDetail.BasicLeg.VariableName, StringFormat={}{0}价格:}"/>
        </DataTemplate>

        <selector:ComposePositionPriceInputItemDTS
            x:Key="PriceInputItemHeaderDTS"
            PriceDiffTypeDataTemplate="{StaticResource PriceDiffTypeInputItemHeaderTemplate}"
            LegPriceTypeDataTemplate="{StaticResource LegPriceTypeInputItemHeaderTemplate}"/>
    </UserControl.Resources>

    <Grid Margin="20,20,20,10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="8"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <HeaderedContentControl 
                Grid.Row="0" Grid.Column="0"
                Header="组合:" Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                <Grid x:Name="TriggerSelectComposeButtonGrid" HorizontalAlignment="Left">
                    <Button Command="{Binding TriggerSelectComposeCmd}"
                            CommandParameter="{Binding ElementName=TriggerSelectComposeButtonGrid}"
                            Style="{StaticResource FlatContentButtonPrimary3}">
                        <TextBlock>
                            <Run Text="{Binding UserComposeViewContainer.UserComposeView.AliasName}" ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
                            <Run>
                                <Run.Style>
                                    <Style TargetType="Run">
                                        <Setter Property="Text" Value="{x:Null}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=ViewRoot, Path=DataContext.UserComposeViewContainer}" Value="{x:Null}">
                                                <Setter Property="Text" Value="请选择组合"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Run.Style>
                            </Run>
                        </TextBlock>
                    </Button>
                </Grid>
            </HeaderedContentControl>

            <HeaderedContentControl 
                Grid.Row="0" Grid.Column="2"
                Header="方向" Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                <ComboBox ItemsSource="{Binding TradeDirections}"
                          SelectedIndex="0"
                          SelectedItem="{Binding Direction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource TradeDirection2NameConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </HeaderedContentControl>

            <HeaderedContentControl 
                Grid.Row="2" Grid.Column="0"
                Header="数量" Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                <mycotrls:NumericUpDown 
                    Interval="1"
                    Minimum="1"
                    SnapToMultipleOfInterval="True"
                    Value="{Binding Quantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </HeaderedContentControl>

            <HeaderedContentControl 
                Grid.Row="2" Grid.Column="2"
                Header="公式:" Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                <TextBlock Text="{Binding ComposeDetailContainer.BasicComposeGraph.Formular}"/>
            </HeaderedContentControl>
        </Grid>

        <Grid Grid.Row="1" Visibility="{Binding UserComposeViewContainer, Converter={StaticResource Null2CollapsedConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TextBlock Grid.Row="0">各腿信息：</TextBlock>
            <DataGrid 
                Grid.Row="1" 
                Margin="0,4,0,0"
                ItemsSource="{Binding ComposeDetailContainer.DetailLegs}"
                SelectionMode="Single"
                BorderThickness="1,1,0,0"
                CanUserSortColumns="False"
                IsSynchronizedWithCurrentItem="True"
                RowStyle="{StaticResource DataGridRowWithNoSelectBG}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="腿" 
                                        Binding="{Binding BasicLeg.VariableName}" MinWidth="60"/>
                    <DataGridTextColumn Header="方向"
                                        Binding="{Binding BasicLeg.TradeDirection, Converter={StaticResource TradeDirection2NameConverter}}" 
                                        MinWidth="60"/>
                    <DataGridTextColumn Header="合约"
                                        Binding="{Binding LegDetailContainer.CnDisplayName}" MinWidth="100"/>
                    <DataGridTextColumn Header="数量" Width="*"
                                        Binding="{Binding BasicLeg.Quantity}"/>
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid Grid.Row="2"
                      Margin="0,8,0,0"
                      BorderThickness="0"
                      HeadersVisibility="None"
                      GridLinesVisibility="None"
                      CanUserReorderColumns="False"
                      CanUserResizeColumns="False"
                      CanUserSortColumns="False"
                      RowStyle="{StaticResource DataGridRowWithNoSelectBG}"
                      ItemsSource="{Binding PriceInputItems}">
                <DataGrid.Columns>
                    <DataGridTemplateColumn CellTemplateSelector="{StaticResource PriceInputItemHeaderDTS}"/>
                    <DataGridTemplateColumn MinWidth="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <mycotrls:NumericUpDown 
                                    Interval="{Binding LegDetail.LegDetailContainer.CommodityDetail.TickSize, Mode=OneWay, FallbackValue={StaticResource Double_1}}"
                                    SnapToMultipleOfInterval="{Binding PriceType, Converter={StaticResource Equal2TrueConverter}, ConverterParameter={x:Static dm:ComposePositionPriceType.LegPrice}}"
                                    Value="{Binding Price, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                    <mycotrls:NumericUpDown.IsEnabled>
                                        <MultiBinding Converter="{StaticResource NotEqual2TrueConverter}" Mode="OneWay">
                                            <Binding ElementName="ViewRoot" Path="DataContext.AutoCalculatePriceInputItem"/>
                                            <Binding/>
                                        </MultiBinding>
                                    </mycotrls:NumericUpDown.IsEnabled>
                                </mycotrls:NumericUpDown>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <RadioButton Content="自动计算">
                                    <RadioButton.IsChecked>
                                        <MultiBinding Converter="{StaticResource Equal2TrueConverter}" Mode="OneWay">
                                            <Binding ElementName="ViewRoot" Path="DataContext.AutoCalculatePriceInputItem"/>
                                            <Binding/>
                                        </MultiBinding>
                                    </RadioButton.IsChecked>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Checked">
                                            <i:InvokeCommandAction Command="{Binding ElementName=ViewRoot, Path=DataContext.PriceInputItemAutoCalculateCheckedCmd}"
                                                                   CommandParameter="{Binding}"/>
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                </RadioButton>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <TextBlock 
                Grid.Row="3"
                Margin="0,8,0,0"
                TextWrapping="Wrap"
                Foreground="{DynamicResource ContentBrush2}"
                Text="自动计算：不确定数据可选择自动计算，该项将不可输入，系统会根据其他数据推算结果"/>
        </Grid>

        <StackPanel Grid.Row="2" Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Margin="0,15,0,0">
            <Button Content="录入"
                    Command="{Binding ToAddCmd}"
                    IsEnabled="{Binding IsAdding, Converter={StaticResource Equal2TrueConverter}, ConverterParameter={StaticResource FalseValue}}"
                    Style="{StaticResource BordedButtonPrimary3}"/>
            <Button Content="取消"
                    Command="{Binding CancelCmd}"
                    Style="{StaticResource BordedButtonStyle}"
                    Margin="15,0,0,0"/>
        </StackPanel>
    </Grid>
</UserControl>

<UserControl x:Class="XueQiaoWaf.Trade.Modules.Presentation.Views.AddComposeDialogContentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:controls="clr-namespace:XueQiaoFoundation.UI.Controls;assembly=XueQiaoFoundation.UI"
             xmlns:convert="clr-namespace:XueQiaoFoundation.BusinessResources.Converters;assembly=XueQiaoFoundation.BusinessResources"
             xmlns:uiconvert="clr-namespace:XueQiaoFoundation.UI.Converters;assembly=XueQiaoFoundation.UI"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:dm="clr-namespace:XueQiaoWaf.Trade.Modules.Applications.DataModels;assembly=XueQiaoWaf.Trade.Modules.Applications"
             xmlns:vm="clr-namespace:XueQiaoWaf.Trade.Modules.Applications.ViewModels;assembly=XueQiaoWaf.Trade.Modules.Applications"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DataContext="{x:Type vm:AddComposeDialogContentViewModel}"
             MaxWidth="600"
             x:Name="ViewRoot">
    <UserControl.Resources>
        <convert:ComposeLegIndex2DisplayNameConverter 
            x:Key="ComposeLegIndex2DisplayNameConverter"/>
        <uiconvert:EqualityToBooleanConverter x:Key="EqualityToBooleanConverter"/>
        <uiconvert:EqualityToVisibilityConverter x:Key="EqualToVisibleConverter" CollapsedWhenEquals="False" CollapsedWhenNotEquals="True"/>
        <uiconvert:EqualityToVisibilityConverter x:Key="NotEqualToVisibleConverter" CollapsedWhenEquals="True" CollapsedWhenNotEquals="False"/>
        <uiconvert:CloneValuesConverter x:Key="CloneValuesConverter"/>
        <convert:TradeDirection2NameConverter x:Key="TradeDirection2NameConverter"/>
        <sys:Int32 x:Key="ZeroInt">0</sys:Int32>
    </UserControl.Resources>
    <StackPanel Margin="20,0,20,10">
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="添加腿" HorizontalAlignment="Left"
                    Command="{Binding ToAddUnitCommand}"
                    Style="{StaticResource FlatContentButtonPrimary3}"/>
            <Button Content="删除腿" HorizontalAlignment="Left" Margin="10,0,0,0"
                    Command="{Binding ToDeleteUnitCommand}"
                    CommandParameter="{Binding ElementName=ComposeUnitDataGrid, Path=SelectedItem}"
                    Style="{StaticResource FlatContentButtonPrimary3}"/>
        </StackPanel>

        <DataGrid Margin="0, 4, 0, 0"
                  ItemsSource="{Binding ComposeUnitCollectionView}"
                  MinHeight="200" MaxHeight="300"
                  IsReadOnly="True"
                  SelectionMode="Single"
                  IsSynchronizedWithCurrentItem="True"
                  SelectedItem="{Binding SelectedComposeUnit, Mode=OneWayToSource}"
                  AlternationCount="{Binding EditCompose.ComposeUnits.Count, Mode=OneWay}"
                  VirtualizingPanel.VirtualizationMode="Standard"
                  ColumnHeaderStyle="{StaticResource DataGridColumnHeader_HorizontalAlignCenter}"
                  CellStyle="{StaticResource DataGridCellStyle_ContentHorizontalAlignCenter}"
                  x:Name="ComposeUnitDataGrid">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="组成" MinWidth="50" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock x:Name="IndexedLetterNameTextBlock"
                                           Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, 
                                                Path=AlternationIndex, Converter={StaticResource ComposeLegIndex2DisplayNameConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="合约" MinWidth="100" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type dm:AddComposeLegDetail}">
                            <Grid x:Name="TriggerSelectContractButtonGrid">
                                <Button Style="{StaticResource FlatContentButtonPrimary3}"
                                        Visibility="Visible"
                                        Content="{Binding LegDetailContainer.CnDisplayName}"
                                        Command="{Binding Path=DataContext.ToSelectUnitContractCommand,ElementName=ViewRoot}"
                                        x:Name="TriggerSelectContractButton">
                                    <Button.CommandParameter>
                                        <MultiBinding Converter="{StaticResource CloneValuesConverter}">
                                            <Binding />
                                            <Binding ElementName="TriggerSelectContractButtonGrid"/>
                                        </MultiBinding>
                                    </Button.CommandParameter>
                                </Button>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Value="{StaticResource ZeroInt}" Binding="{Binding ContractId}">
                                    <Setter TargetName="TriggerSelectContractButton" Property="Content" Value="选择合约"/>
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Header="方向" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type dm:AddComposeLegDetail}">
                            <ComboBox 
                                ItemsSource="{Binding Path=DataContext.TradeDirections, ElementName=ViewRoot}"
                                SelectedItem="{Binding Direction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                VerticalContentAlignment="Center"
                                Background="Transparent"
                                BorderThickness="0">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Converter={StaticResource TradeDirection2NameConverter}}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTemplateColumn CanUserSort="False">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="配比" VerticalAlignment="Center"/>
                                <Button Margin="4,0,0,0" VerticalAlignment="Center"
                                        Style="{StaticResource CornerTipButton}" Content="?">
                                    <Button.ToolTip>
                                        <ToolTip Style="{StaticResource XQToolTipStyle}">
                                            <TextBlock  
                                                TextWrapping="Wrap"
                                                Text="各腿的数量配比的最大公约数是1"/>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type dm:AddComposeLegDetail}">
                            <controls:NumericUpDown 
                                MinWidth="80"
                                Minimum="0" 
                                Interval="1"
                                Value="{Binding Quantity, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                BorderThickness="0"
                                IsEnabled="{Binding IsJoinTrade}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                
                <DataGridTemplateColumn Header="参与交易" MinWidth="50" CanUserSort="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type dm:AddComposeLegDetail}">
                            <CheckBox IsChecked="{Binding Path=IsJoinTrade, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      HorizontalAlignment="Center">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Unchecked">
                                        <i:InvokeCommandAction Command="{Binding DataContext.IsJoinTradeUncheckedCmd, ElementName=ViewRoot}"
                                                               CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="Checked">
                                        <i:InvokeCommandAction Command="{Binding DataContext.IsJoinTradeCheckedCmd, ElementName=ViewRoot}"
                                                               CommandParameter="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <StackPanel Margin="0, 20, 0, 0">
            <HeaderedContentControl 
                Header="名称：" 
                Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                <Grid>
                    <TextBox 
                        Margin="0,0,36,0"
                        Text="{Binding EditCompose.ComposeName, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                        ScrollViewer.CanContentScroll="True" ScrollViewer.HorizontalScrollBarVisibility="Hidden"/>
                    <Button 
                        HorizontalAlignment="Right"
                        Content="默认"
                        Style="{StaticResource FlatContentButtonPrimary3}" 
                        Command="{Binding ToSetDefaultNameCmd}"/>
                </Grid>
            </HeaderedContentControl>
            <HeaderedContentControl 
                Margin="0,10,0,0"
                Header="公式：" 
                Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                <Grid>
                    <TextBox 
                        Margin="0,0,36,0"
                        Text="{Binding EditCompose.Formular,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                        InputMethod.IsInputMethodEnabled="False"
                        CharacterCasing="Upper"/>
                    <Button
                        HorizontalAlignment="Right"
                        Margin="0,0,15,0"
                        Content="?" 
                        Style="{StaticResource CornerTipButton}">
                        <Button.ToolTip>
                            <ToolTip Style="{StaticResource XQToolTipStyle}">
                                <StackPanel Orientation="Vertical" MaxWidth="260">
                                    <TextBlock FontWeight="Bold" TextWrapping="Wrap">公式格式说明：</TextBlock>
                                    <TextBlock TextWrapping="Wrap">公式格式为各腿字母"A,B,C等"和运算符"+-*/()"以及数字的组合。</TextBlock>
                                    <TextBlock TextWrapping="Wrap">如：A+2*B-C/3</TextBlock>
                                </StackPanel>
                            </ToolTip>
                        </Button.ToolTip>
                    </Button>
                </Grid>
            </HeaderedContentControl>
            <HeaderedContentControl 
                Margin="0,10,0,0"
                Header="小数位数：" 
                Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                <controls:NumericUpDown
                    Width="100"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    SnapToMultipleOfInterval="True"
                    Interval="1"
                    Minimum="{Binding PrecisionNumberMin, Mode=OneWay}" 
                    Maximum="{Binding PrecisionNumberMax, Mode=OneWay}"
                    InputMethod.IsInputMethodEnabled="False"
                    Value="{Binding EditCompose.PrecisionNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </HeaderedContentControl>
        </StackPanel>
        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Margin="0,20,0,0">
            <Button Content="创建" Margin="0,0,10,0"
                    Command="{Binding ToCreateCommand}"
                    Style="{StaticResource BordedButtonPrimary3}"/>
            <Button Content="取消" Margin="0"
                    Command="{Binding CancelCommand}"
                    Style="{StaticResource BordedButtonStyle}"/>
        </StackPanel>
    </StackPanel>
</UserControl>

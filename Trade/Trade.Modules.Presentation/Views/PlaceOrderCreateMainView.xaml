<UserControl x:Class="XueQiaoWaf.Trade.Modules.Presentation.Views.PlaceOrderCreateMainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:native_trade="clr-namespace:NativeModel.Trade;assembly=NativeModel"
             xmlns:hosting_arbitrage="clr-namespace:xueqiao.trade.hosting.arbitrage.thriftapi;assembly=IDLAutoGenerated"
             xmlns:convert="clr-namespace:XueQiaoFoundation.BusinessResources.Converters;assembly=XueQiaoFoundation.BusinessResources"
             xmlns:uiconvert="clr-namespace:XueQiaoFoundation.UI.Converters;assembly=XueQiaoFoundation.UI"
             xmlns:mycotrls="clr-namespace:XueQiaoFoundation.UI.Controls;assembly=XueQiaoFoundation.UI"
             xmlns:vm="clr-namespace:XueQiaoWaf.Trade.Modules.Applications.ViewModels;assembly=XueQiaoWaf.Trade.Modules.Applications"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{x:Type vm:PlaceOrderCreateMainViewModel}">
    <UserControl.Resources>
        <convert:ClientPlaceOrderType2NameConverter x:Key="ClientPlaceOrderType2NameConverter"/>
        <convert:HostingXQOrderPriceType2NameConverter x:Key="HostingXQOrderPriceTypeConverter"/>
        <uiconvert:EqualityToBooleanConverter x:Key="EqualityToBooleanConverter"/>
        <uiconvert:VisibilityToStarLengthConverter x:Key="VisibilityToStarLengthConverter"/>
        <BooleanToVisibilityConverter x:Key="True2VisibleConverter"/>
        <uiconvert:EqualityToVisibilityConverter x:Key="Equal2VisibleConverter" CollapsedWhenEquals="False" CollapsedWhenNotEquals="True"/>

        <Style TargetType="TextBlock" 
               x:Key="SmallText">
            <Setter Property="FontSize" Value="{DynamicResource SecondaryContentFontSize}"/>
        </Style>

        <Style TargetType="TextBlock"
               x:Key="AssociatedTextBlock">
            <Setter Property="FontSize" Value="{DynamicResource PrimaryContentFontSize}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight" Value="Bold"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock" BasedOn="{StaticResource SmallText}"
               x:Key="PlaceOrderHeaderText">
            <Setter Property="Foreground" Value="{DynamicResource ContentBrush2}"/>
            <Setter Property="Margin" Value="0,0,0,4"/>
        </Style>

        <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxDefault}">
            <Setter Property="Height" Value="32"/>
        </Style>

        <Style TargetType="{x:Type mycotrls:NumericUpDown}" BasedOn="{StaticResource NumericUpDownStyleDefault}">
            <Setter Property="Height" Value="32"/>
        </Style>
    </UserControl.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Vertical" >
            <TextBlock Style="{StaticResource PlaceOrderHeaderText}" Text="订单类型：" />
            <ComboBox ItemsSource="{Binding SupportPlaceOrderTypes}"
                      SelectedItem="{Binding SelectedPlaceOrderType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=False, ValidatesOnDataErrors=False}">
                <ComboBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type native_trade:ClientPlaceOrderType}">
                        <TextBlock Text="{Binding Converter={StaticResource ClientPlaceOrderType2NameConverter}}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <Grid Margin="0,8,0,0" DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="{Binding ElementName=ExecEveryQtyColumnContent, Path=Visibility, Converter={StaticResource VisibilityToStarLengthConverter}, ConverterParameter=1}" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Vertical" >
                <TextBlock>
                    <TextBlock.Style>
                        <Style BasedOn="{StaticResource PlaceOrderHeaderText}" TargetType="TextBlock">
                            <Setter Property="Text" Value="数量："/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding PlaceOrderViewCreateDrama.ViewOrderTargetType}"
                                             Value="{x:Static native_trade:ClientXQOrderTargetType.COMPOSE_TARGET}">
                                    <Setter Property="Text" Value="总数量："/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <mycotrls:NumericUpDown 
                    Value="{Binding OrderQuantity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Minimum="1" 
                    Interval="1"/>
            </StackPanel>

            <StackPanel Grid.Column="1" 
                        Orientation="Vertical"
                        Margin="8,0,0,0"
                        x:Name="ExecEveryQtyColumnContent"
                        Visibility="{Binding PlaceOrderViewCreateDrama.ViewOrderTargetType, Converter={StaticResource Equal2VisibleConverter}, ConverterParameter={x:Static native_trade:ClientXQOrderTargetType.COMPOSE_TARGET}}">
                <TextBlock Style="{StaticResource PlaceOrderHeaderText}" Text="每次发单数量：" />
                <mycotrls:NumericUpDown 
                    Value="{Binding PlaceOrderViewCreateDrama.ExecEveryQty, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    Minimum="1" 
                    Interval="1"/>
            </StackPanel>
        </Grid>
        
        <DockPanel Margin="0,8,0,0" DockPanel.Dock="Top" LastChildFill="True">
            <StackPanel Orientation="Vertical" DockPanel.Dock="Left">
                <TextBlock Style="{StaticResource PlaceOrderHeaderText}" Text="价格：" />
                <ComboBox 
                    ItemsSource="{Binding PlaceOrderViewCreateDrama.SupportPriceTypeValues}"
                    IsSynchronizedWithCurrentItem="True"
                    BorderThickness="1"
                    Width="70"
                    SelectedItem="{Binding PlaceOrderViewCreateDrama.SelectedPriceTypeValue, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    >
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type hosting_arbitrage:HostingXQOrderPrice}">
                            <TextBlock Text="{Binding PriceType, Converter={StaticResource HostingXQOrderPriceTypeConverter}}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </StackPanel>

            <ContentControl Margin="8,0,0,0" DockPanel.Dock="Right">
                <ContentControl.ContentTemplate>
                    <DataTemplate>
                        <Grid>
                            <StackPanel 
                                Orientation="Vertical"
                                x:Name="LimitPriceTypeControl" 
                                Visibility="Visible"
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}">
                                <TextBlock Style="{StaticResource PlaceOrderHeaderText}" Text="指定价：" />
                                <mycotrls:NumericUpDown 
                                    Interval="{Binding DataContext.OrderTargetPriceTickSize, ElementName=LimitPriceTypeControl, Mode=OneWay}"
                                    Value="{Binding DataContext.PlaceOrderViewCreateDrama.SelectedPriceTypeValue.LimitPrice, 
                                        ElementName=LimitPriceTypeControl, Mode=TwoWay, 
                                        UpdateSourceTrigger=PropertyChanged}"
                                    SnapToMultipleOfInterval="True"/>
                            </StackPanel>

                            <StackPanel 
                                Orientation="Vertical"
                                x:Name="ChaseTickPriceTypeControl" 
                                Visibility="Collapsed"
                                DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}">
                                <TextBlock Style="{StaticResource PlaceOrderHeaderText}" Text="追Tick：" />
                                <mycotrls:NumericUpDown 
                                    Interval="1"
                                    Minimum="0"
                                    Value="{Binding DataContext.PlaceOrderViewCreateDrama.SelectedPriceTypeValue.ChasePriceTicks, 
                                        ElementName=ChaseTickPriceTypeControl, Mode=TwoWay,
                                        UpdateSourceTrigger=PropertyChanged}"
                                    SnapToMultipleOfInterval="True"/>
                            </StackPanel>
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding DataContext.PlaceOrderViewCreateDrama.SelectedPriceTypeValue.PriceType,
                                RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, 
                                Converter={StaticResource EqualityToBooleanConverter}, 
                                ConverterParameter={x:Static hosting_arbitrage:HostingXQOrderPriceType.ACTION_PRICE_LIMIT}}"  
                                     Value="True">
                                <Setter TargetName="LimitPriceTypeControl" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ChaseTickPriceTypeControl" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DataContext.PlaceOrderViewCreateDrama.SelectedPriceTypeValue.PriceType,
                                RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, 
                                Converter={StaticResource EqualityToBooleanConverter}, 
                                ConverterParameter={x:Static hosting_arbitrage:HostingXQOrderPriceType.ACTION_PRICE_LIMIT}}"  
                                     Value="False">
                                <Setter TargetName="LimitPriceTypeControl" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="ChaseTickPriceTypeControl" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ContentControl.ContentTemplate>
            </ContentControl>
        </DockPanel>
        
        <ContentControl DockPanel.Dock="Top" Margin="0,8,0,0">
            <ContentControl.ContentTemplate>
                <DataTemplate>
                    <Grid DockPanel.Dock="Top" Margin="0,0,0,0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="15"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <DockPanel
                            Grid.Row="0"
                            Grid.Column="0"
                            LastChildFill="False">
                            <TextBlock 
                                DockPanel.Dock="Left" 
                                Style="{StaticResource AssociatedTextBlock}"       
                                Foreground="{DynamicResource MinorBrush1}"
                                Text="{Binding DataContext.BidPrice1, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}}">
                                <TextBlock.InputBindings>
                                    <MouseBinding Command="{Binding DataContext.BidPriceClickCommand, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" MouseAction="LeftClick"/>
                                </TextBlock.InputBindings>
                            </TextBlock>
                            <TextBlock 
                                DockPanel.Dock="Right" Margin="8,0,0,0" 
                                Style="{StaticResource SmallText}"     
                                VerticalAlignment="Bottom"
                                Foreground="{DynamicResource ContentBrush1}"
                                Text="{Binding DataContext.BidQty1, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}}"/>
                        </DockPanel>
                        <DockPanel  Grid.Row="0"
                            Grid.Column="2"
                            LastChildFill="False">
                            <TextBlock 
                                DockPanel.Dock="Left" 
                                Style="{StaticResource SmallText}"       
                                VerticalAlignment="Bottom"
                                Foreground="{DynamicResource ContentBrush1}"
                                Text="{Binding DataContext.AskQty1, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}}"/>
                            <TextBlock 
                                DockPanel.Dock="Right" 
                                Margin="8,0,0,0"
                                Style="{StaticResource AssociatedTextBlock}"       
                                Foreground="{DynamicResource PrimaryBrush3}"
                                Text="{Binding DataContext.AskPrice1, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}}">
                                <TextBlock.InputBindings>
                                    <MouseBinding  Command="{Binding DataContext.AskPriceClickCommand, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" MouseAction="LeftClick"></MouseBinding>
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </DockPanel>
                        <Grid Grid.ColumnSpan="3" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" x:Name="BuyButtonColumn"/>
                                <ColumnDefinition Width="8" x:Name="SeperatorColumn"/>
                                <ColumnDefinition Width="*" x:Name="SellButtonColumn"/>
                            </Grid.ColumnDefinitions>
                            <Button 
                                x:Name="BuyButton"
                                Grid.Row="2"
                                Grid.Column="0" 
                                Grid.ColumnSpan="1"
                                Style="{StaticResource FlatBgButtonMinor1}"  
                                Height="32"
                                Content="买入" Command="{Binding DataContext.BuyCommand, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"/>
                            <Button 
                                x:Name="SellButton"
                                Grid.Row="2"
                                Grid.Column="2" 
                                Grid.ColumnSpan="1"
                                Style="{StaticResource FlatBgButtonPrimary2}" 
                                Height="32"
                                Content="卖出" Command="{Binding DataContext.SellCommand, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"/>
                        </Grid>
                    </Grid>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding DataContext.PlaceOrderViewCreateDrama.ShowBuyButtonAreaView, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False">
                            <Setter TargetName="BuyButtonColumn" Property="Width" Value="0"/>
                            <Setter TargetName="SeperatorColumn" Property="Width" Value="0"/>
                            
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DataContext.PlaceOrderViewCreateDrama.ShowSellButtonAreaView, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Value="False">
                            <Setter TargetName="SeperatorColumn" Property="Width" Value="0"/>
                            <Setter TargetName="SellButtonColumn" Property="Width" Value="0"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ContentControl.ContentTemplate>
        </ContentControl>
    </DockPanel>
</UserControl>

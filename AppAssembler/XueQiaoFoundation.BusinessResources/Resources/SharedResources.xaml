<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:convert="clr-namespace:XueQiaoFoundation.BusinessResources.Converters"
                    xmlns:bsView="clr-namespace:BolapanControl.ItemsFilter.View;assembly=ItemsFilter"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:selector="clr-namespace:XueQiaoFoundation.BusinessResources.Selectors"
                    xmlns:datamodel="clr-namespace:XueQiaoFoundation.BusinessResources.DataModels"
                    xmlns:hosting_arbitrage="clr-namespace:xueqiao.trade.hosting.arbitrage.thriftapi;assembly=IDLAutoGenerated"
                    xmlns:res="clr-namespace:XueQiaoFoundation.BusinessResources.Resources"
                    xmlns:constants="clr-namespace:XueQiaoFoundation.BusinessResources.Constants"
                    xmlns:shared_model="clr-namespace:XueQiaoFoundation.Shared.Model;assembly=XueQiaoFoundation.Shared">

    <convert:ClientXQOrderState2NameConverter x:Key="OrderState2NameConverter"/>
    <convert:TradeDirection2NameConverter x:Key="TradeDirection2NameConverter"/>
    <convert:ClientXQOrderTargetType2NameConverter x:Key="ClientXQOrderTargetType2NameConverter"/>
    <convert:HostingXQCondition2DisplayTextConverter x:Key="HostingXQCondition2DisplayTextConverter"/>

    <sys:String x:Key="NullValueDataDefaultDisplayText">--</sys:String>

    <GeometryGroup x:Key="LogoIconGeometry" FillRule="Nonzero">
        <PathGeometry Figures="M85.71,327.36c15.62,44.9,6.4,126.78,0,178-3,24-6.06,42.86,0,44,7.51,1.41,25.51-43.55,44-96,20.89-59.24,41.77-128.13,37-152-8-47-99-123-126-105C-1.29,222.36,77.71,304.36,85.71,327.36Z"/>
        <PathGeometry Figures="M217.71,319.36c-8,112-107.28,267.93-170.61,368.41-29.67,47.07-58,84.33-42.94,91.67,9,4.42,25-.58,47.55-22.08,32.67-31.22,82.79-80.06,136.81-135,69.21-70.38,144.79-149,188.7-209.87,20.39-28.23,33.16-53.41,36.72-70.71,7.56-23.36,8.71-53.17,3.57-85.41-12.19-76.56-53.62-167.83-97.27-217.94-22.52-25.86-46.36-41-65.54-38.09C141.71,12.36,225.71,241.36,217.71,319.36Z"/>
        <PathGeometry Figures="M458.71,365.36c-13,30-32,65.58-58,99-22.79,29.25-50.41,58.05-77.23,85-30.52,30.7-60.32,59-86.09,83-34.8,32.33-65.57,56.8-57.68,66,6,7,28,1,34-2a288.36,288.36,0,0,0,26.73-13.08c31.53-17.39,85.11-48.82,128.77-74.64,73.1-43.23,153-90.86,202.51-131.27,22.41-18.29,37.82-36.69,45-49.75,12.51-18.84,20.18-46.28,22.38-77.23,3.79-53.25-5.65-117.88-21.35-166-13.94-42.72-35.36-72.21-58.12-74.72C480.71,96.36,475.71,253,467.71,329.36,465.83,347.37,461.57,358.75,458.71,365.36Z"/>
    </GeometryGroup>

    <GeometryGroup x:Key="QuotationIconGeometry" FillRule="Nonzero">
        <PathGeometry Figures="M90.1 959.6c-15.1 0-27.4-12.2-27.4-27.2V89.3c0-15 12.3-27.2 27.4-27.2 15.1 0 27.4 12.2 27.4 27.2v815.6H934c15.1 0 27.4 12.2 27.4 27.1 0 15-12.3 27.2-27.4 27.2H93.9c-1.3 0.3-2.6 0.4-3.8 0.4z"/>
        <PathGeometry Figures="M218.5 633.5c-7.4 0-14.3-2.8-19.5-8-5.1-5.1-7.9-11.9-7.9-19.1 0-7.2 2.8-14 7.9-19.1l233.2-233c5.1-5.1 12-8 19.3-8h1.2c7.4 0 14.2 2.8 19.4 8l144.7 144.6 232.7-232.5c5.2-5.2 12.1-8 19.4-8s14.3 2.8 19.4 8c5.1 5.1 7.9 11.9 7.9 19.1 0 7.2-2.8 14.1-7.9 19.2L636.8 556c-5.1 5.2-12 8-19.4 8h-1.2c-7.3 0-14.2-2.8-19.4-8L452.2 411.4 237.9 625.5c-5.1 5.2-12.1 8-19.4 8z"/>
    </GeometryGroup>
    

    <!-- `委托订单状态`过滤器视图数据模板 -->
    <DataTemplate x:Key="ClientEntrustedOrderStateFilterViewDataTemplate">
        <bsView:MultiValueFilterView  
            Model="{Binding}" 
            Style="{StaticResource XQMultiValueFilterViewDefault}">
            <bsView:MultiValueFilterView.ValueItemTemplate>
                <DataTemplate>
                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                        <CheckBox.Content>
                            <MultiBinding Converter="{StaticResource OrderState2NameConverter}" Mode="OneWay">
                                <Binding />
                                <Binding Source="{x:Static datamodel:XQClientOrderType.Entrusted}"/>
                            </MultiBinding>
                        </CheckBox.Content>
                    </CheckBox>
                </DataTemplate>
            </bsView:MultiValueFilterView.ValueItemTemplate>
        </bsView:MultiValueFilterView>
    </DataTemplate>

    <!-- `预埋订单状态`过滤器视图数据模板 -->
    <DataTemplate x:Key="ClientParkedOrderStateFilterViewDataTemplate">
        <bsView:MultiValueFilterView  
            Model="{Binding}" 
            Style="{StaticResource XQMultiValueFilterViewDefault}">
            <bsView:MultiValueFilterView.ValueItemTemplate>
                <DataTemplate>
                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                        <CheckBox.Content>
                            <MultiBinding Converter="{StaticResource OrderState2NameConverter}" Mode="OneWay">
                                <Binding />
                                <Binding Source="{x:Static datamodel:XQClientOrderType.Parked}"/>
                            </MultiBinding>
                        </CheckBox.Content>
                    </CheckBox>
                </DataTemplate>
            </bsView:MultiValueFilterView.ValueItemTemplate>
        </bsView:MultiValueFilterView>
    </DataTemplate>

    <!-- `条件订单状态`过滤器视图数据模板 -->
    <DataTemplate x:Key="ClientConditionOrderStateFilterViewDataTemplate">
        <bsView:MultiValueFilterView  
            Model="{Binding}" 
            Style="{StaticResource XQMultiValueFilterViewDefault}">
            <bsView:MultiValueFilterView.ValueItemTemplate>
                <DataTemplate>
                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}">
                        <CheckBox.Content>
                            <MultiBinding Converter="{StaticResource OrderState2NameConverter}" Mode="OneWay">
                                <Binding />
                                <Binding Source="{x:Static datamodel:XQClientOrderType.Condition}"/>
                            </MultiBinding>
                        </CheckBox.Content>
                    </CheckBox>
                </DataTemplate>
            </bsView:MultiValueFilterView.ValueItemTemplate>
        </bsView:MultiValueFilterView>
    </DataTemplate>

    <!-- `交易方向`过滤器视图数据模板 -->
    <DataTemplate x:Key="TradeDirectionFilterViewDataTemplate">
        <bsView:MultiValueFilterView  
            Model="{Binding}" 
            Style="{StaticResource XQMultiValueFilterViewDefault}">
            <bsView:MultiValueFilterView.ValueItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding Converter={StaticResource TradeDirection2NameConverter}}"
                              IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                </DataTemplate>
            </bsView:MultiValueFilterView.ValueItemTemplate>
        </bsView:MultiValueFilterView>
    </DataTemplate>

    <!-- `合约/组合`过滤器视图数据模板 -->
    <DataTemplate x:Key="ClientXQOrderTargetTypeFilterViewDataTemplate">
        <bsView:MultiValueFilterView  
            Model="{Binding}" 
            Style="{StaticResource XQMultiValueFilterViewDefault}">
            <bsView:MultiValueFilterView.ValueItemTemplate>
                <DataTemplate>
                    <CheckBox Content="{Binding Converter={StaticResource ClientXQOrderTargetType2NameConverter}}"
                              IsChecked="{Binding IsSelected, Mode=TwoWay, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"/>
                </DataTemplate>
            </bsView:MultiValueFilterView.ValueItemTemplate>
        </bsView:MultiValueFilterView>
    </DataTemplate>
    
    <!-- 组合视图默认名称数据模板 -->
    <DataTemplate x:Key="ComposeViewDefaultNameDT"
                  DataType="{x:Type datamodel:IComposeDetailDataModel}">
        <ItemsControl ItemsSource="{Binding DetailLegs}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type datamodel:ComposeLegDetail}">
                    <TextBlock>
                        <!-- & -->
                        <Run x:Name="JoinString" Text=" &amp; "/><!--
                     --><Run Text="{Binding LegDetailContainer.CnDisplayName, Mode=OneWay}"/>
                    </TextBlock>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                            <Setter TargetName="JoinString" Property="Text" Value="{x:Null}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 雪橇标的名称 Data template -->
    <DataTemplate x:Key="XqTargetNameDT"
                  DataType="{x:Type datamodel:IXqTargetDM}">
        <TextBlock Text="{Binding TargetName, TargetNullValue={StaticResource NullValueDataDefaultDisplayText}}"/>
    </DataTemplate>

    <!-- 组合标的名称（包含 tooltip detail） -->
    <DataTemplate x:Key="ComposeTargetNameWithTooltipDT"
                  DataType="{x:Type datamodel:IXqTargetDM}">
        <Grid>
            <ContentControl 
                Content="{Binding}"
                ContentTemplate="{DynamicResource XqTargetNameDT}"/>
            <Grid.ToolTip>
                <ToolTip Style="{StaticResource XQToolTipStyle}">
                    <StackPanel Margin="4">
                        <HeaderedContentControl 
                            Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}"
                            Header="名称：">
                            <ContentControl 
                                Content="{Binding}"
                                ContentTemplate="{DynamicResource XqTargetNameDT}"/>
                        </HeaderedContentControl>
                        <HeaderedContentControl 
                            Margin="0,5,0,0"
                            Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}"
                            Header="小数位数：">
                            <TextBlock Text="{Binding TargetComposeUserComposeViewContainer.UserComposeView.PrecisionNumber,
                                                TargetNullValue={x:Static constants:XueQiaoConstants.XQComposePrice_LowerDecimalCount_String},
                                                FallbackValue={x:Static constants:XueQiaoConstants.XQComposePrice_LowerDecimalCount_String}}"/>
                        </HeaderedContentControl>
                        <HeaderedContentControl 
                            Margin="0,5,0,0"
                            Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}"
                            Header="公式："
                            Content="{Binding TargetComposeDetailContainer.BasicComposeGraph.Formular}"/>
                        <HeaderedContentControl 
                            Margin="0,5,0,0"
                            Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}"
                            VerticalContentAlignment="Top"
                            Header="配比：">
                            <ContentControl Content="{Binding TargetComposeDetailContainer}" ContentTemplate="{DynamicResource ComposeLegDetailsDT}"/>
                        </HeaderedContentControl>
                    </StackPanel>
                </ToolTip>
            </Grid.ToolTip>
        </Grid>
    </DataTemplate>

    <!-- 雪橇标的名称（包含tooltip detail） 数据模板 selector -->
    <selector:XqTargetDTSelector 
        x:Key="XqTargetNameWithTooltipDTSelector"
        ContractTargetDT="{StaticResource XqTargetNameDT}"
        ComposeTargetDT="{StaticResource ComposeTargetNameWithTooltipDT}"/>

    
    <!-- 组合腿详情模板 -->
    <DataTemplate x:Key="ComposeLegDetailsDT" DataType="{x:Type datamodel:IComposeDetailDataModel}">
        <ItemsControl ItemsSource="{Binding DetailLegs}" Grid.IsSharedSizeScope="True">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type datamodel:ComposeLegDetail}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="ComposeUnitNameColumn"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="10"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="0" Text="{Binding BasicLeg.VariableName, StringFormat={}{0}:}"/>
                        <TextBlock Grid.Column="2" Text="{Binding LegDetailContainer.CnDisplayName}"/>
                        <TextBlock Grid.Column="4" HorizontalAlignment="Center" 
                                    Text="{Binding BasicLeg.TradeDirection, Converter={StaticResource TradeDirection2NameConverter}}"/>
                        <TextBlock Grid.Column="6" HorizontalAlignment="Center" 
                                    Text="{Binding BasicLeg.Quantity}"/>
                    </Grid>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    <!-- 条件单条件信息显示模板 -->
    <DataTemplate x:Key="ConditionOrderConditionInfosDT" DataType="{x:Type datamodel:OrderItemDataModel_Condition}">
        <ItemsControl 
            ItemsSource="{Binding Conditions}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type hosting_arbitrage:HostingXQCondition}">
                    <TextBlock TextWrapping="Wrap">
                        <!-- NewLine  ;&#x0a; -->
                        <Run x:Name="Seperator" Text=";&#x0a;"/>
                        <Run Text="{Binding Mode=OneWay, Converter={StaticResource HostingXQCondition2DisplayTextConverter}}"/>
                    </TextBlock>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                            <Setter TargetName="Seperator" Property="Text" Value="{x:Null}"/>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>

    
    <!-- 涨跌相关的 TextBlock 样式 -->
    <!-- 通过依赖属性 QuotationAttachPropertiesProvider.IsXqTargetExpired 设置过期样式。
         通过 QuotationAttachPropertiesProvider.IsInteractive 设置鼠标移动到元素时的样式。
         通过 QuotationAttachPropertiesProvider.CompareResult1 设置涨跌样式
    -->
    <Style x:Key="RiseOrFallRelatedText" TargetType="TextBlock">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=(res:QuotationAttachPropertiesProvider.IsXqTargetExpired)}" 
                                   Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ContentBrush4}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(res:QuotationAttachPropertiesProvider.IsXqTargetExpired)}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(res:QuotationAttachPropertiesProvider.IsInteractive)}" Value="True"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="FontWeight" Value="Bold"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(res:QuotationAttachPropertiesProvider.IsXqTargetExpired)}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(res:QuotationAttachPropertiesProvider.CompareResult1)}" 
                                   Value="{x:Static shared_model:XQCompareResult.Smaller}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource FallBrush1}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(res:QuotationAttachPropertiesProvider.IsXqTargetExpired)}" Value="False"/>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(res:QuotationAttachPropertiesProvider.CompareResult1)}" 
                                   Value="{x:Static shared_model:XQCompareResult.Larger}"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource RiseBrush1}"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
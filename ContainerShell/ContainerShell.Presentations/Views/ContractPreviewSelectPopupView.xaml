<Popup  x:Class="ContainerShell.Presentations.Views.ContractPreviewSelectPopupView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:convert="clr-namespace:XueQiaoFoundation.BusinessResources.Converters;assembly=XueQiaoFoundation.BusinessResources"
        xmlns:uiconvert="clr-namespace:XueQiaoFoundation.UI.Converters;assembly=XueQiaoFoundation.UI"
        xmlns:vm="clr-namespace:ContainerShell.Applications.ViewModels;assembly=ContainerShell.Applications"
        xmlns:styles="clr-namespace:XueQiaoFoundation.UI.Styles;assembly=XueQiaoFoundation.UI"
        xmlns:adorners="http://gu.se/Adorners"
        mc:Ignorable="d" 
        StaysOpen="False"
        Placement="Bottom"
        x:Name="ViewRoot"
        AllowsTransparency="True"
        Height="380"
        Width="Auto"
        d:DataContext="{x:Type vm:ContractPreviewSelectionViewModel}">
    <Popup.Resources>
        <convert:ContractToDisplayNameConverter x:Key="ContractNameConverter" DisplayNameMode="CommodityCodeContractCode"/>
        <convert:CommodityType2NameConverter x:Key="CommodityType2NameConverter"/>
        <convert:CommodityToDisplayNameConverter x:Key="CommodityToDisplayNameConverter"/>
        <uiconvert:EqualityToBooleanConverter x:Key="Equal2BoolConverter"/>
        <BooleanToVisibilityConverter x:Key="True2VisibleConverter"/>
        <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyleDefault}"
               x:Key="FilterTextBox">
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="styles:StylesHelper.CornerRadius" Value="0,0,0,0"/>
        </Style>
    </Popup.Resources>
    <Grid Margin="4" 
          Effect="{DynamicResource BossyControlShadowEffect}"
          Background="{DynamicResource RootBgBrush}">
        
        <DockPanel>
            <StackPanel DockPanel.Dock="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Content="确定" Margin="0,10"
                            Style="{StaticResource BordedButtonPrimary3}"
                            Command="{Binding OkCommand}"/>
                <Button Content="取消" Margin="15,10"
                            Command="{Binding CancelCommand}"
                            Style="{StaticResource BordedButtonStyle}"/>
            </StackPanel>
            <Grid Margin="10" DockPanel.Dock="Top" 
                  DataContext="{Binding ContractSelectTree.Exchanges}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <DockPanel Grid.Row="0" Grid.Column="0" MinWidth="150" MaxWidth="250">
                    <TextBlock DockPanel.Dock="Top">交易所</TextBlock>
                    <Border Margin="0,4,0,0" DockPanel.Dock="Bottom" BorderBrush="{DynamicResource BorderBrush2}" BorderThickness="1">
                        <DockPanel>
                            <HeaderedContentControl Header="搜索"  DockPanel.Dock="Top"
                                                        Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                                <TextBox Style="{StaticResource FilterTextBox}"
                                             Text="{Binding Path=DataContext.FilterFields.FilterExchangeMic, ElementName=ViewRoot,
                                                            Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </HeaderedContentControl>
                            <ListBox BorderThickness="0" Margin="0,4,0,0"
                                    ItemsSource="{Binding}"
                                    IsSynchronizedWithCurrentItem="True"
                                    SelectionMode="Single"
                                    SelectedItem="{Binding Path=DataContext.SelectedExchangeNode, ElementName=ViewRoot, Mode=TwoWay}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock ToolTip="{Binding Path=Text, RelativeSource={RelativeSource Self}}"
                                                   Text="{Binding Node.CnAcronym}">
                                        </TextBlock>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyleDefault}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="adorners:Info.IsVisible" Value="False"/>
                                        <Setter Property="adorners:Info.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <AdornedElementPlaceholder Grid.Row="0"/>
                                                        <Rectangle HorizontalAlignment="Stretch" Fill="{DynamicResource BorderBrush2}" Height="1"
                                                                   Grid.Row="1"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=DataContext.IsVisiable, RelativeSource={RelativeSource Self}}"
                                                             Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Setter Property="IsSelected" Value="False"/>
                                            </DataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Value="True">
                                                        <Condition.Binding>
                                                            <MultiBinding Converter="{StaticResource Equal2BoolConverter}" Mode="OneWay">
                                                                <Binding RelativeSource="{RelativeSource Self}" Path="DataContext"/>
                                                                <Binding ElementName="ViewRoot" Path="DataContext.LastInnerExchangeNode" FallbackValue="{x:Null}"/>
                                                            </MultiBinding>
                                                        </Condition.Binding>
                                                    </Condition>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource self}, Path=Visibility}" Value="Visible"/>
                                                    <Condition Binding="{Binding ElementName=ViewRoot, Path=DataContext.ExistOutterExchange}" Value="True"/>
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="adorners:Info.IsVisible" Value="True"/>
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </DockPanel>
                    </Border>
                </DockPanel>
                <DockPanel Grid.Row="0" Grid.Column="2" MinWidth="100" MaxWidth="200">
                    <TextBlock DockPanel.Dock="Top">类别</TextBlock>
                    <ListBox Margin="0,4,0,0"
                                 BorderBrush="{DynamicResource BorderBrush2}"
                                 BorderThickness="1"
                                 ItemsSource="{Binding Path=Children}"
                                 IsSynchronizedWithCurrentItem="True"
                                 SelectionMode="Single"
                                 SelectedItem="{Binding Path=DataContext.SelectedCommodityTypeNode, ElementName=ViewRoot, Mode=TwoWay}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Node, Converter={StaticResource CommodityType2NameConverter}}"
                                           ToolTip="{Binding Node, Converter={StaticResource CommodityType2NameConverter}}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </DockPanel>
                <DockPanel Grid.Row="0" Grid.Column="4" MinWidth="150" MaxWidth="250">
                    <TextBlock DockPanel.Dock="Top">商品</TextBlock>
                    <Border Margin="0,4,0,0" DockPanel.Dock="Bottom" BorderBrush="{DynamicResource BorderBrush2}" BorderThickness="1">
                        <DockPanel>
                            <HeaderedContentControl Header="搜索"  DockPanel.Dock="Top"
                                                        Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                                <TextBox 
                                         Style="{StaticResource FilterTextBox}"
                                         Text="{Binding Path=DataContext.FilterFields.FilterCommodityCode, ElementName=ViewRoot,
                                            Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </HeaderedContentControl>
                            <ListBox BorderThickness="0" Margin="0,4,0,0"
                                    ItemsSource="{Binding Children/Children}"
                                    SelectionMode="Single"
                                    SelectedItem="{Binding Path=DataContext.SelectedCommodityNode, ElementName=ViewRoot, Mode=TwoWay}"
                                    x:Name="CommodityListBox">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Node, Converter={StaticResource CommodityToDisplayNameConverter}}"
                                               ToolTip="{Binding Node, Converter={StaticResource CommodityToDisplayNameConverter}}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyleDefault}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=DataContext.IsVisiable, RelativeSource={RelativeSource Self}}"
                                                             Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Setter Property="IsSelected" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </DockPanel>
                    </Border>
                </DockPanel>
                
                <DockPanel Grid.Row="0" Grid.Column="6">
                    <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Bottom">合约</TextBlock>
                        <ProgressBar Style="{StaticResource CircularProgressBarDefault}"
                                         Visibility="{Binding Path=DataContext.IsLoadingContracts, ElementName=ViewRoot, Converter={StaticResource True2VisibleConverter}}"
                                         VerticalAlignment="Center"
                                         IsIndeterminate="True"
                                         Value="0"
                                         Height="14"
                                         Width="14"
                                         Margin="5,0"/>
                    </StackPanel>
                    <Border Margin="0,4,0,0" DockPanel.Dock="Bottom" BorderBrush="{DynamicResource BorderBrush2}" BorderThickness="1">
                        <DockPanel>
                            <HeaderedContentControl Header="搜索"  DockPanel.Dock="Top"
                                                        Style="{StaticResource HorizonalOrientationFieldHeaderedStyle}">
                                <TextBox  
                                         Style="{StaticResource FilterTextBox}"
                                         Text="{Binding Path=DataContext.FilterFields.FilterContractCode, ElementName=ViewRoot,
                                            Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </HeaderedContentControl>
                            <ListBox BorderThickness="0" Margin="0,4,0,0" Width="180"
                                    ItemsSource="{Binding Path=DataContext.SelectedCommodityNode.Children, ElementName=ViewRoot, Mode=OneWay}"
                                    SelectionMode="Single"
                                    SelectedItem="{Binding Path=DataContext.SelectedContractNode, ElementName=ViewRoot, Mode=TwoWay}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="10"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ContentControl 
                                                    Grid.Column="0"
                                                    Content="{StaticResource QuotationIconGeometry}" 
                                                    Style="{StaticResource GeometryContentCheckedStyle}"
                                                    Foreground="{DynamicResource PrimaryBrush3}"
                                                    ToolTip="雪橇已提供行情"
                                                    Width="10" Height="10"
                                                    Visibility="{Binding ContractDetailContainer.ContractDetail.SubscribeXQQuote, Converter={StaticResource True2VisibleConverter}}"/>
                                            <TextBlock 
                                                    Grid.Column="1" Margin="8,0,0,0"
                                                    Text="{Binding ContractDetailContainer.CnDisplayName}" 
                                                    ToolTip="{Binding ContractDetailContainer.CnDisplayName}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyleDefault}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=DataContext.IsVisiable, RelativeSource={RelativeSource Self}}"
                                                             Value="False">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Setter Property="IsSelected" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>
                        </DockPanel>
                    </Border>
                </DockPanel>
            </Grid>
        </DockPanel>
    </Grid>
</Popup>

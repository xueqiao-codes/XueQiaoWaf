<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Styles="clr-namespace:XueQiaoFoundation.UI.Styles;assembly=XueQiaoFoundation.UI"
    xmlns:dragablz="clr-namespace:Dragablz;assembly=Dragablz"
    xmlns:dragablzConverters="clr-namespace:Dragablz.Converters;assembly=Dragablz"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=Microsoft.Windows.Shell"
    xmlns:helper="clr-namespace:XueQiaoFoundation.Shared.Helper;assembly=XueQiaoFoundation.Shared"
    xmlns:uiextra_helper="clr-namespace:XueQiaoFoundation.UI.Extra.helper">

    <!-- Usage of GeometryGroup -->
    <!--
    <Viewbox DockPanel.Dock="Top" Width="30" Height="30" Margin="4,15">
        <Path Data="{DynamicResource LogoIconGeometry}" Fill="{DynamicResource ForegroundInPrimaryBgBrush}"/>
    </Viewbox>
    -->

    <!--
    <BitmapImage x:Key="TemplateLogo80Bitmap" UriSource="../Images/TemplateLogo80.png" />
    -->
    <!-- Usage of BitmapImage as Mask -->
    <!--
    <Rectangle Fill="{DynamicResource ForegroundInPrimaryBgBrush}" 
                           Width="30" Height="30" 
                           DockPanel.Dock="Top"
                           Margin="4,15,4,20">
        <Rectangle.OpacityMask>
            <ImageBrush  ImageSource="{DynamicResource TemplateLogo80Bitmap}"/>
        </Rectangle.OpacityMask>
    </Rectangle>
    -->

    <Style x:Key="InvisibleThumbStyle"
           TargetType="{x:Type Thumb}" 
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- Xq TabItem style -->
    <Style x:Key="XqTabItemStyle" 
           TargetType="{x:Type TabItem}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Foreground" Value="{DynamicResource ContentBrush3}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" Margin="0,0,4,0">
                        <ContentPresenter 
                            x:Name="ContentSite"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                            ContentSource="Header"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ContentBrush1}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ContentBrush2}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <!-- Xq TabControl style -->
    <Style x:Key="XqHorizonTabControlStyle" 
           TargetType="{x:Type TabControl}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource XqTabItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" BorderBrush="{DynamicResource BorderBrush2}" BorderThickness="0,0,0,1">
                            <ScrollViewer 
                                Template="{StaticResource SmartScrollViewerControlTemplate}"
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Hidden">
                                <TabPanel Panel.ZIndex ="1" IsItemsHost="True"/>
                            </ScrollViewer>
                        </Border>
                        <ContentPresenter
                            Grid.Row="1"
                            ContentSource="SelectedContent" 
                            Name="PART_SelectedContentHost"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyle_ContentHorizontalAlignLeft" TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="DataGridCellStyle_ContentHorizontalAlignRight" TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="DataGridCellStyle_ContentHorizontalAlignCenter" TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DataGridCellStyle_ContentHorizontalAlignStretch" TargetType="DataGridCell" BasedOn="{StaticResource DataGridCellDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="DataGridColumnHeader_HorizontalAlignLeft" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
    </Style>

    <Style x:Key="DataGridColumnHeader_HorizontalAlignCenter" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DataGridColumnHeader_HorizontalAlignRight" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
    </Style>

    <Style x:Key="DataGridColumnHeader_HorizontalAlignStretch" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource DataGridColumnHeaderDefault}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="WorkspaceCloseButtonStyle"
           TargetType="{x:Type Button}" 
           BasedOn="{StaticResource MenuIconButton1}">
        <Setter Property="Content">
            <Setter.Value>
                <PathGeometry Figures="M1024 53.895387L970.104613 0 512.006178 458.110791 53.895387 0 0 53.895387l458.110791 458.110791L0 970.104613l53.895387 53.895387L512.006178 565.889209l458.098435 458.110791 53.895387-53.895387L565.889209 512.006178 1024 53.895387z"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Styles:StylesHelper.CornerRadius" Value="8,8,8,8"/>
    </Style>

    <dragablzConverters:ShowDefaultCloseButtonConverter x:Key="ShowDefaultCloseButtonConverter" />

    <!-- 工作空间 DragableTabItem 控件样式 -->
    <Style x:Key="WorkspaceDragableTabItemStyle"  
           TargetType="{x:Type dragablz:DragablzItem}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontSize" Value="{DynamicResource RegularTitleFontSize}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource BossyControlBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush2}"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="8,2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                    <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="0 1 0 -1">
                        <dragablz:Trapezoid 
                            x:Name="Trapezoid" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            PenBrush="{TemplateBinding BorderBrush}"
                            LongBasePenBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"                                          
                            PenThickness="2"
                            Margin="0 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                  Margin="{TemplateBinding Control.Padding}"
                                                  x:Name="contentPresenter" />
                                <Thumb Grid.Column="0" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" 
                                       x:Name="PART_Thumb"
                                       Style="{StaticResource InvisibleThumbStyle}" />
                                <Button Grid.Column="1"
                                        Style="{StaticResource WorkspaceCloseButtonStyle}"                                        
                                        Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource ShowDefaultCloseButtonConverter}">
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" Path="ShowDefaultCloseButton" />
                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" Path="FixedHeaderCount" />
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="LogicalIndex" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                </Button>
                            </Grid>
                        </dragablz:Trapezoid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                            <Setter TargetName="contentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BossyControlBgBrushHover}" TargetName="Trapezoid"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{DynamicResource RootBgBrush}" TargetName="Trapezoid"/>
                            <Setter Property="LongBasePenBrush" Value="{DynamicResource RootBgBrush}" TargetName="Trapezoid"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 雪橇 tab 放置在顶部的 TabablzControl 样式 -->
    <!-- 外部通过 uiextra_helper:TabablzControlHelper.HeaderContainerHeight 获取 HeaderContainer 的高度 -->
    <Style x:Key="XqTabablzControl_TopTabStripPlacement" 
           TargetType="{x:Type dragablz:TabablzControl}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="uiextra_helper:TabablzControlHelper.HeaderContainerMargin" Value="0,0,0,0"/>
        <Setter Property="ShowDefaultCloseButton" Value="False"/>
        <Setter Property="ShowDefaultAddButton" Value="False"/>
        <Setter Property="AdjacentHeaderItemOffset" Value="-15"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush2}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource StandardDragablzTabItemStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:TabablzControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="contentPanel"
                                Grid.Column="0" Grid.Row="1" Margin="0 -1 0 0"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <Grid x:Name="PART_ItemsHolder" />
                        </Border>
                        <Grid x:Name="HeaderContainerGrid"
                              Grid.Column="0" Grid.Row="0"
                              helper:WpfElementSizeObserver.Observe="True"
                              helper:WpfElementSizeObserver.ObservedHeight="{Binding RelativeSource={RelativeSource AncestorType={x:Type dragablz:TabablzControl}},
                                                Path=(uiextra_helper:TabablzControlHelper.HeaderContainerHeight), Mode=OneWayToSource}">

                            <Grid 
                                Margin="{Binding RelativeSource={RelativeSource AncestorType={x:Type dragablz:TabablzControl}},
                                                Path=(uiextra_helper:TabablzControlHelper.HeaderContainerMargin)}" 
                                Visibility="{TemplateBinding IsHeaderPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid.Resources>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource StandardEmbeddedButtonStyle}"></Style>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HeaderSuffixContentMinWidth}"/>
                                </Grid.ColumnDefinitions>
                                <ContentControl 
                                    Grid.Column="0" 
                                    x:Name="PrefixContentControl" 
                                    Content="{TemplateBinding HeaderPrefixContent}"
                                    ContentStringFormat="{TemplateBinding HeaderPrefixContentStringFormat}"
                                    ContentTemplate="{TemplateBinding HeaderPrefixContentStringFormat}"
                                    ContentTemplateSelector="{TemplateBinding HeaderPrefixContentTemplateSelector}"/>
                                <dragablz:DragablzItemsControl 
                                    x:Name="PART_HeaderItemsControl"                                                         
                                    Grid.Column="1"
                                    ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}"                                                                                                            
                                    ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                    ItemsOrganiser="{TemplateBinding HeaderItemsOrganiser}"
                                    KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"
                                    ItemTemplate="{TemplateBinding HeaderItemTemplate}"
                                    FixedItemCount="{TemplateBinding FixedHeaderCount}"
                                    Style="{StaticResource TabablzDragablzItemsControlStyle}"
                                    shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                    <dragablz:DragablzItemsControl.MaxWidth>
                                        <MultiBinding>
                                            <MultiBinding.Converter>
                                                <dragablz:TabablzHeaderSizeConverter Orientation="Horizontal"/>
                                            </MultiBinding.Converter>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth" />
                                            <Binding RelativeSource="{RelativeSource Self}" Path="ItemsPresenterWidth" />
                                            <Binding ElementName="PrefixContentControl" Path="ActualWidth" />
                                            <!-- TODO: DesiredSize.Width will make binding memory leak -->
                                            <Binding ElementName="DefaultAddButton" Path="DesiredSize.Width"/>
                                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HeaderSuffixContentMinWidth"/>
                                        </MultiBinding>
                                    </dragablz:DragablzItemsControl.MaxWidth>
                                </dragablz:DragablzItemsControl>
                                <Button 
                                    Style="{StaticResource AddItemCommandButtonStyle}"
                                    x:Name="DefaultAddButton"
                                    Grid.Column="2"
                                    Command="{x:Static dragablz:TabablzControl.AddItemCommand}"
                                    Visibility="{TemplateBinding ShowDefaultAddButton, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"/>
                                <ContentControl
                                    Grid.Column="3" 
                                    x:Name="SuffixContentControl" 
                                    Content="{TemplateBinding HeaderSuffixContent}"
                                    ContentStringFormat="{TemplateBinding HeaderSuffixContentStringFormat}"
                                    ContentTemplate="{TemplateBinding HeaderSuffixContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding HeaderSuffixContentTemplateSelector}"                                            
                                    HorizontalAlignment="Stretch"/>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHeaderPanelVisible" Value="False">
                            <Setter Property="Margin" TargetName="contentPanel" Value="0 0 0 0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxTabStyle" 
           TargetType="{x:Type ListBox}"
           BasedOn="{StaticResource ListBoxDefault}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemTabStyle" 
           TargetType="{x:Type ListBoxItem}"
           BasedOn="{StaticResource ListBoxItemStyleDefault}">
        <Setter Property="Styles:StylesHelper.HoverBrush" Value="{x:Null}"/>
        <Setter Property="Styles:StylesHelper.SelectedBrush" Value="{x:Null}"/>
        <Setter Property="Styles:StylesHelper.SelectedActiveBrush" Value="{x:Null}"/>
        <Setter Property="Styles:StylesHelper.CornerRadius" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="0,0,8,0"/>
        <Setter Property="FontSize" Value="{DynamicResource RegularTitleFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource ContentBrush3}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ContentBrush1}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ContentBrush2}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CornerTipButton" 
           TargetType="{x:Type ButtonBase}"
           BasedOn="{StaticResource FlatBgButtonPrimary3}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="9"/>
        <Setter Property="Styles:StylesHelper.CornerRadius" Value="6,6,6,6"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource self}, Path=Width}"/>
    </Style>

    <Style x:Key="XQToolTipStyle" TargetType="{x:Type ToolTip}" BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Background" Value="{DynamicResource TooltipBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6"/>
    </Style>
    
</ResourceDictionary>
/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using System.ComponentModel;
using System.Runtime.CompilerServices; 
using Thrift.Protocol;
using Thrift.Transport;

namespace xueqiao.trade.hosting.terminal.ao
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class TradeAccountSettlementInfoWithRelatedTime : TBase, INotifyPropertyChanged
  {
    public event PropertyChangedEventHandler PropertyChanged;
    protected bool SetProperty<T>(ref T field, T value, [CallerMemberName] string propertyName = null)
    {
      if (Equals(field, value)) { return false; }
      field = value;
      RaisePropertyChanged(propertyName);
      return true;
    }

    protected void RaisePropertyChanged([CallerMemberName] string propertyName = null)
    {
      PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
    private xueqiao.trade.hosting.tradeaccount.data.TradeAccountSettlementInfo _tradeAccountSettlementInfo;
    private xueqiao.trade.hosting.position.adjust.thriftapi.SettlementTimeRelateSledReqTime _reqTime;

    public xueqiao.trade.hosting.tradeaccount.data.TradeAccountSettlementInfo TradeAccountSettlementInfo
    {
      get
      {
        return _tradeAccountSettlementInfo;
      }
      set
      {
        __isset.tradeAccountSettlementInfo = true;
        SetProperty(ref _tradeAccountSettlementInfo, value);
      }
    }

    public xueqiao.trade.hosting.position.adjust.thriftapi.SettlementTimeRelateSledReqTime ReqTime
    {
      get
      {
        return _reqTime;
      }
      set
      {
        __isset.reqTime = true;
        SetProperty(ref _reqTime, value);
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool tradeAccountSettlementInfo;
      public bool reqTime;
    }

    public TradeAccountSettlementInfoWithRelatedTime() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.Struct) {
              TradeAccountSettlementInfo = new xueqiao.trade.hosting.tradeaccount.data.TradeAccountSettlementInfo();
              TradeAccountSettlementInfo.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.Struct) {
              ReqTime = new xueqiao.trade.hosting.position.adjust.thriftapi.SettlementTimeRelateSledReqTime();
              ReqTime.Read(iprot);
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("TradeAccountSettlementInfoWithRelatedTime");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (TradeAccountSettlementInfo != null && __isset.tradeAccountSettlementInfo) {
        field.Name = "tradeAccountSettlementInfo";
        field.Type = TType.Struct;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        TradeAccountSettlementInfo.Write(oprot);
        oprot.WriteFieldEnd();
      }
      if (ReqTime != null && __isset.reqTime) {
        field.Name = "reqTime";
        field.Type = TType.Struct;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        ReqTime.Write(oprot);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("TradeAccountSettlementInfoWithRelatedTime(");
      sb.Append("TradeAccountSettlementInfo: ");
      sb.Append(TradeAccountSettlementInfo== null ? "<null>" : TradeAccountSettlementInfo.ToString());
      sb.Append(",ReqTime: ");
      sb.Append(ReqTime== null ? "<null>" : ReqTime.ToString());
      sb.Append(")");
      return sb.ToString();
    }

  }

}

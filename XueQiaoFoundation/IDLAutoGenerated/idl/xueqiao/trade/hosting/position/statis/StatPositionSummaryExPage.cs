/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using System.ComponentModel;
using System.Runtime.CompilerServices; 
using Thrift.Protocol;
using Thrift.Transport;

namespace xueqiao.trade.hosting.position.statis
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class StatPositionSummaryExPage : TBase, INotifyPropertyChanged
  {
    public event PropertyChangedEventHandler PropertyChanged;
    protected bool SetProperty<T>(ref T field, T value, [CallerMemberName] string propertyName = null)
    {
      if (Equals(field, value)) { return false; }
      field = value;
      RaisePropertyChanged(propertyName);
      return true;
    }

    protected void RaisePropertyChanged([CallerMemberName] string propertyName = null)
    {
      PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }
    private int _totalNum;
    private List<StatPositionSummaryEx> _statPositionSummaryExList;

    public int TotalNum
    {
      get
      {
        return _totalNum;
      }
      set
      {
        __isset.totalNum = true;
        SetProperty(ref _totalNum, value);
      }
    }

    public List<StatPositionSummaryEx> StatPositionSummaryExList
    {
      get
      {
        return _statPositionSummaryExList;
      }
      set
      {
        __isset.statPositionSummaryExList = true;
        SetProperty(ref _statPositionSummaryExList, value);
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool totalNum;
      public bool statPositionSummaryExList;
    }

    public StatPositionSummaryExPage() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.I32) {
              TotalNum = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.List) {
              {
                StatPositionSummaryExList = new List<StatPositionSummaryEx>();
                TList _list41 = iprot.ReadListBegin();
                for( int _i42 = 0; _i42 < _list41.Count; ++_i42)
                {
                  StatPositionSummaryEx _elem43 = new StatPositionSummaryEx();
                  _elem43 = new StatPositionSummaryEx();
                  _elem43.Read(iprot);
                  StatPositionSummaryExList.Add(_elem43);
                }
                iprot.ReadListEnd();
              }
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("StatPositionSummaryExPage");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (__isset.totalNum) {
        field.Name = "totalNum";
        field.Type = TType.I32;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(TotalNum);
        oprot.WriteFieldEnd();
      }
      if (StatPositionSummaryExList != null && __isset.statPositionSummaryExList) {
        field.Name = "statPositionSummaryExList";
        field.Type = TType.List;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        {
          oprot.WriteListBegin(new TList(TType.Struct, StatPositionSummaryExList.Count));
          foreach (StatPositionSummaryEx _iter44 in StatPositionSummaryExList)
          {
            _iter44.Write(oprot);
          }
          oprot.WriteListEnd();
        }
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("StatPositionSummaryExPage(");
      sb.Append("TotalNum: ");
      sb.Append(TotalNum);
      sb.Append(",StatPositionSummaryExList: ");
      if (StatPositionSummaryExList == null)
      {
        sb.Append("<null>");
      }
      else
      {
        sb.Append("[");
        foreach (StatPositionSummaryEx _iter45 in StatPositionSummaryExList)
        {
          sb.Append(_iter45.ToString());
          sb.Append(", ");
        }
        sb.Append("]");
      }
      sb.Append(")");
      return sb.ToString();
    }

  }

}

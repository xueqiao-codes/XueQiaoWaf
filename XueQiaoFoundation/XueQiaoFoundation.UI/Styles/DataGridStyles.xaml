<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XueQiaoFoundation.UI.Styles"
                    xmlns:bsFilter="clr-namespace:BolapanControl.ItemsFilter;assembly=ItemsFilter">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/ContentControlStyles.xaml" />
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/ItemsFilterStyles.xaml" />
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/SharedStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" 
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Background" Value="{DynamicResource BossyControlBgBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BossyControlBgBrush}"/>
        <Setter Property="BorderThickness" Value="0 0 1 1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Polygon x:Name="Arrow"
                                 Margin="8 8 3 3"
                                 HorizontalAlignment="Right"
                                 VerticalAlignment="Bottom"
                                 Fill="{DynamicResource IconBrush1}"
                                 Points="0,10 10,10 10,0"
                                 Stretch="Uniform" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BossyControlBgBrushHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyleDefault"
           TargetType="{x:Type Thumb}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Width" Value="6" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                        <Rectangle HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Width="1" Fill="{TemplateBinding Background}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DataGridColumnSortArrowUpDT">
        <Viewbox Width="11" Height="11" UseLayoutRounding="True">
            <Grid>
                <Path Fill="{DynamicResource IconBrush1}" 
                      Data="M512 1024l406.147414-460.796917H105.852586l406.147414 460.796917z"/>
                <Path Fill="{DynamicResource IconBrush2}"
                      Data="M512 0L105.852586 460.796917h812.294828L512 0z"/>
            </Grid>
        </Viewbox>
    </DataTemplate>

    <DataTemplate x:Key="DataGridColumnSortArrowDownDT">
        <Viewbox Width="11" Height="11" UseLayoutRounding="True">
            <Grid>
                <Path Fill="{DynamicResource IconBrush2}" 
                      Data="M512 1024l406.147414-460.796917H105.852586l406.147414 460.796917z"/>
                <Path Fill="{DynamicResource IconBrush1}"
                      Data="M512 0L105.852586 460.796917h812.294828L512 0z"/>
            </Grid>
        </Viewbox>
    </DataTemplate>

    <Style x:Key="DataGridColumnHeaderDefault"
           TargetType="{x:Type DataGridColumnHeader}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Padding" Value="6"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush3}"/>
        <Setter Property="SeparatorBrush" Value="{DynamicResource BorderBrush3}"/>
        <Setter Property="SeparatorVisibility" Value="Visible"/>
        <Setter Property="Background" Value="{DynamicResource PanelHeaderBgBrush1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="BackgroundBorder" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter 
                                    Grid.Column="0"
                                    x:Name="HeaderContent"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                                <ContentControl 
                                    x:Name="SortArrowContainer"
                                    Grid.Column="1"
                                    Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    Visibility="Collapsed"
                                    ContentTemplate="{StaticResource DataGridColumnSortArrowUpDT}"/>
                            </Grid>
                        </Border>

                        <Thumb x:Name="PART_LeftHeaderGripper" 
                               HorizontalAlignment="Left" HorizontalContentAlignment="Left" 
                               Background="{x:Null}"
                               Style="{StaticResource ColumnHeaderGripperStyleDefault}"/>

                        <Thumb x:Name="PART_RightHeaderGripper" 
                               HorizontalAlignment="Right" HorizontalContentAlignment="Right" 
                               Background="{x:Null}"
                               Style="{StaticResource ColumnHeaderGripperStyleDefault}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--可排序列鼠标样式-->
                        <Trigger Property="CanUserSort" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <!--升序-->
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrowContainer" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--降序-->
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrowContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrowContainer" Property="ContentTemplate" Value="{StaticResource DataGridColumnSortArrowDownDT}"/>
                        </Trigger>
                        <Trigger Property="SeparatorVisibility" Value="Visible">
                            <Setter TargetName="PART_RightHeaderGripper" Property="Background" Value="{Binding Path=SeparatorBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeaderUseItemsFilterFramework" 
           TargetType="{x:Type DataGridColumnHeader}"
            BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Padding" Value="6"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush3}"/>
        <Setter Property="SeparatorBrush" Value="{DynamicResource BorderBrush3}"/>
        <Setter Property="SeparatorVisibility" Value="Visible"/>
        <Setter Property="Background" Value="{DynamicResource PanelHeaderBgBrush1}"/>
        <Setter Property="local:DataGridColumnHeaderHelper.ShowColumnFilter" Value="True"/>
        <Setter Property="local:DataGridColumnHeaderHelper.ColumnFilterItemTemplateSelector" Value="{StaticResource XQFilterItemTemplateSelectorDefault}"/>
        <Setter Property="local:DataGridColumnHeaderHelper.FilterControlStateChangedCallbak" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border x:Name="BackgroundBorder" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                
                                <ContentPresenter 
                                    Grid.Column="0"
                                    x:Name="HeaderContent"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>

                                <!-- column filter view -->
                                <bsFilter:ColumnFilter
                                    Grid.Column="1"
                                    x:Name="ColumnFilter"
                                    VerticalAlignment="Center"
                                    ParentCollection="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                    Style="{StaticResource ColumnFilterDefault}"
                                    Foreground="{TemplateBinding Foreground}"
                                    ItemTemplate="{Binding Path=(local:DataGridColumnHeaderHelper.ColumnFilterItemTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                                    ItemTemplateSelector="{Binding Path=(local:DataGridColumnHeaderHelper.ColumnFilterItemTemplateSelector), RelativeSource={RelativeSource TemplatedParent}}"
                                    FilterControlStateChangedCallbak="{Binding Path=(local:DataGridColumnHeaderHelper.FilterControlStateChangedCallbak), RelativeSource={RelativeSource TemplatedParent}}"
                                    Margin="4,0,0,0"
                                    Visibility="{Binding Path=(local:DataGridColumnHeaderHelper.ShowColumnFilter), 
                                                         RelativeSource={RelativeSource TemplatedParent}, 
                                                         Converter={StaticResource bool2VisibilityConverter}}"/>

                                <ContentControl 
                                    x:Name="SortArrowContainer"
                                    Grid.Column="2"
                                    Margin="4,0,0,0"
                                    VerticalAlignment="Center"
                                    Visibility="Collapsed"
                                    ContentTemplate="{StaticResource DataGridColumnSortArrowUpDT}"/>
                            </Grid>
                        </Border>

                        <Thumb x:Name="PART_LeftHeaderGripper" 
                               HorizontalAlignment="Left" HorizontalContentAlignment="Left" 
                               Background="{x:Null}"
                               Style="{StaticResource ColumnHeaderGripperStyleDefault}"/>

                        <Thumb x:Name="PART_RightHeaderGripper" 
                               HorizontalAlignment="Right" HorizontalContentAlignment="Right" 
                               Background="{x:Null}"
                               Style="{StaticResource ColumnHeaderGripperStyleDefault}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--可排序列鼠标样式-->
                        <Trigger Property="CanUserSort" Value="True">
                            <Setter Property="Cursor" Value="Hand"></Setter>
                        </Trigger>
                        <!--升序-->
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrowContainer" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <!--降序-->
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrowContainer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrowContainer" Property="ContentTemplate" Value="{StaticResource DataGridColumnSortArrowDownDT}"/>
                        </Trigger>
                        <Trigger Property="SeparatorVisibility" Value="Visible">
                            <Setter TargetName="PART_RightHeaderGripper" Property="Background" Value="{Binding Path=SeparatorBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowHeaderGripperStyle" 
           TargetType="{x:Type Thumb}"
            BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Height" Value="6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Margin="{TemplateBinding Padding}"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding Background}"
                            BorderThickness="0 0 0 1"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="DataGridRowHeaderDefault" 
           TargetType="{x:Type DataGridRowHeader}"
            BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush3}" />
        <Setter Property="BorderThickness" Value="0 0 1 0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Control Grid.Column="1"
                                         Focusable="False"
                                         SnapsToDevicePixels="False"
                                         Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                         Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top"
                               Style="{StaticResource DataGridRowHeaderGripperStyle}"
                               Background="Transparent"/>
                        <Thumb x:Name="PART_BottomHeaderGripper"
                               VerticalAlignment="Bottom"
                               Style="{StaticResource DataGridRowHeaderGripperStyle}"
                               Background="{DynamicResource BorderBrush3}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <ControlTemplate x:Key="DataGridRowValidationErrorTemplateDefault">
        <Grid Margin="2 0 2 0"
              VerticalAlignment="Center"
              DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}, Path=(Validation.Errors).CurrentItem}"
              ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.ErrorContent}">
            <Path Width="20"
                  Height="20"
                  Data="m 31.630585,39.233818 24.6309,-24.6308 c 0.6183,-0.6184 1.6208,-0.6184 2.2392,0 l 24.6308,24.6308 c 0.6184,0.6184 0.6184,1.6209 0,2.2392 l -24.6308,24.6309 c -0.6183,0.6183 -1.6209,0.6183 -2.2392,0 l -24.6309,-24.6309 c -0.6183,-0.6183 -0.6183,-1.6208 0,-2.2392 z"
                  Fill="{DynamicResource ErrorBrush1}"
                  Stretch="Uniform" />
            <Path Width="10"
                  Height="10"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="m 53.781741,31.196677 c -2.237724,0 -4.0625,1.824776 -4.0625,4.0625 0,2.237724 1.824776,4.0625 4.0625,4.0625 2.237724,0 4.0625,-1.824776 4.0625,-4.0625 0,-2.237724 -1.824776,-4.0625 -4.0625,-4.0625 z m -4.09375,-21.375 0.03125,0.53125 1.21875,19.46875 5.6875,0 1.25,-20 -8.1875,0 z"
                  Fill="{DynamicResource ErrorBrush1}"
                  Stretch="Uniform" />
        </Grid>
    </ControlTemplate>

    <!--  Don't set the MinHeight or Height property, use the MinRowHeight or RowHeight property on DataGrid style!  -->
    <Style x:Key="DataGridRowDefault"
           TargetType="{x:Type DataGridRow}">
        <Setter Property="local:DataGridRowHelper.SelectionUnit" Value="{Binding Path=SelectionUnit, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="ValidationErrorTemplate" Value="{StaticResource DataGridRowValidationErrorTemplateDefault}" />
        <Style.Triggers>
            <!--  IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectorItemSelectedBgBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SelectorItemSelectedBgBrush}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectorItemSelectedBgBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SelectorItemSelectedBgBrush}" />
            </MultiTrigger>

            <!--  IsMouseOver  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectorItemHoverBgBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SelectorItemHoverBgBrush}" />
            </MultiTrigger>

            <!--  IsEnabled  -->
            <!--  IsEnabled and IsSelected  -->

        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridRowWithNoSelectBG"
           TargetType="{x:Type DataGridRow}" 
           BasedOn="{StaticResource DataGridRowDefault}">
        <Style.Triggers>
            <!--  IsSelected  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}" />
            </MultiTrigger>

            <!--  IsMouseOver  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridRowHelper.SelectionUnit" Value="FullRow" />
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background}" />
                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}" />
            </MultiTrigger>

            <!--  IsEnabled  -->
            <!--  IsEnabled and IsSelected  -->

        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellDefault" 
           TargetType="{x:Type DataGridCell}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="local:DataGridCellHelper.SelectionUnit" Value="{Binding Path=(local:DataGridRowHelper.SelectionUnit), Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Style.Triggers>
            <!--  IsSelected  -->
            <!-- Do nothing -->
           
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectorItemSelectedBgBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SelectorItemSelectedBgBrush}" />
            </MultiTrigger>

            <!--  IsKeyboardFocusWithin  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
                    <Condition Property="IsKeyboardFocusWithin" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush1}" />
            </MultiTrigger>

            <!--  IsSelected and Selector.IsSelectionActive  -->
            <!--<MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightTextBrush}" />
            </MultiTrigger>-->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectorItemSelectedBgBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SelectorItemSelectedBgBrush}" />
            </MultiTrigger>

            <!--  IsMouseOver  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="local:DataGridCellHelper.IsCellOrRowHeader" Value="True" />
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource SelectorItemHoverBgBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource SelectorItemHoverBgBrush}" />
            </MultiTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridDefault"
           TargetType="{x:Type DataGrid}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="GridLinesVisibility" Value="All"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderBrush3}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource BorderBrush3}"/>
        <Setter Property="BorderThickness" Value="1,1,1,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush3}"/>
        <Setter Property="Background" Value="{DynamicResource RootBgBrush}"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellDefault}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderDefault}" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background" Value="{DynamicResource PrimaryBrush3}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Width="{TemplateBinding Width}"
                                           Height="{TemplateBinding Height}"
                                           Fill="{TemplateBinding Background}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Width" Value="2" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="MinRowHeight" Value="25" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderDefault}" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False" 
                                      VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                      HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Command="{x:Static DataGrid.SelectAllCommand}"
                                                Focusable="False"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Column="1"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    Grid.ColumnSpan="2"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>
                                        </Grid>
                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Grid.Row="1"
                                                   Grid.Column="2"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
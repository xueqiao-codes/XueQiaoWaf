<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XueQiaoFoundation.UI.Styles">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/SharedStyles.xaml" />
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/ContentControlStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Button -->
    <Style x:Key="ButtonStyleBase"
           TargetType="{x:Type ButtonBase}" 
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="local:StylesHelper.HoverBrush" Value="{x:Null}"/>
        <Setter Property="local:StylesHelper.PressedBrush" Value="{x:Null}"/>
        <Setter Property="local:StylesHelper.CornerRadius" Value="0,0,0,0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border x:Name="Bg"
                            CornerRadius="{TemplateBinding local:StylesHelper.CornerRadius}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        </Border>
                        <ContentControl Content="{TemplateBinding Content}"
                                        ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                        HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Style="{StaticResource GeometryContentCheckedStyle}"
                                        Foreground="{TemplateBinding Foreground}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        FontStretch="{TemplateBinding FontStretch}"
                                        FontWeight="{TemplateBinding FontWeight}"
                                        FontStyle="{TemplateBinding FontStyle}"/>
                        <Border x:Name="Border"
                                CornerRadius="{TemplateBinding local:StylesHelper.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.HoverBrush), Mode=OneWay}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.PressedBrush), Mode=OneWay}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!---->
    <!-- 边框按钮样式 -->
    <Style x:Key="BordedButtonStyle" 
           BasedOn="{StaticResource ButtonStyleBase}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="15,3" />
        <Setter Property="Foreground" Value="{DynamicResource BorderBrush1}"/>
        <Setter Property="Background" Value="{DynamicResource RootBgBrush}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource RootBgBrushHover}"/>
        <Setter Property="local:StylesHelper.PressedBrush" Value="{DynamicResource RootBgBrushHover}"/>
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="FontSize" Value="{DynamicResource RegularTitleFontSize}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush1}"/>
    </Style>

    <Style x:Key="BordedButtonPrimary3"
           BasedOn="{StaticResource BordedButtonStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush3}"/>
    </Style>


    <!---->
    <!-- 扁平背景按钮样式 -->
    <Style x:Key="FlatBgButtonStyle" 
           BasedOn="{StaticResource ButtonStyleBase}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="8,3" />
        <Setter Property="Foreground" Value="{DynamicResource ContentBrush2}"/>
        <Setter Property="Background" Value="{DynamicResource BossyControlBgBrush}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource BossyControlBgBrushHover}"/>
        <Setter Property="local:StylesHelper.PressedBrush" Value="{DynamicResource BossyControlBgBrushHover}"/>
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="FontSize" Value="{DynamicResource RegularTitleFontSize}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
    </Style>

    <Style x:Key="FlatBgButtonPrimary2" 
           BasedOn="{StaticResource FlatBgButtonStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundInPrimaryBgBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush2}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource PrimaryBrush2Sel}"/>
        <Setter Property="local:StylesHelper.PressedBrush" Value="{DynamicResource PrimaryBrush2Sel}"/>
    </Style>

    <Style x:Key="FlatBgButtonPrimary3" 
           BasedOn="{StaticResource FlatBgButtonStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundInPrimaryBgBrush}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource PrimaryBrush3Sel}"/>
        <Setter Property="local:StylesHelper.PressedBrush" Value="{DynamicResource PrimaryBrush3Sel}"/>
    </Style>

    <Style x:Key="FlatBgButtonMinor1" 
           BasedOn="{StaticResource FlatBgButtonStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundInMinorBgBrush}"/>
        <Setter Property="Background" Value="{DynamicResource MinorBrush1}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource MinorBrush1Sel}"/>
        <Setter Property="local:StylesHelper.PressedBrush" Value="{DynamicResource MinorBrush1Sel}"/>
    </Style>


    <!---->
    <!-- 扁平内容按钮样式 -->
    <Style x:Key="FlatContentButtonStyle"
           BasedOn="{StaticResource ButtonStyleBase}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="local:StylesHelper.CornerRadius" Value="0,0,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Padding" Value="0" />
        <Setter Property="FontSize" Value="{DynamicResource PrimaryContentFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource ContentBrush1}"/>
    </Style>

    <Style x:Key="FlatContentButtonPrimary3"
           BasedOn="{StaticResource FlatContentButtonStyle}"
           TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush3}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush3Sel}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush3Sel}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <!---->
    <!-- Icon 样式按钮 -->
    <Style x:Key="IconButton1" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource ButtonStyleBase}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="4" />

        <Setter Property="Foreground" Value="{DynamicResource IconBrush1}"/>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource IconBrush1Sel}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource IconBrush1Sel}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="IconButton2" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource IconButton1}">
        <Setter Property="Foreground" Value="{DynamicResource IconBrush2}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource IconBrush2Sel}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource IconBrush2Sel}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!---->
    <!-- Menu icon 样式按钮 -->
    <Style x:Key="MenuIconButton1" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource IconButton1}">
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource RootBgBrushHover}"/>
        <Setter Property="local:StylesHelper.PressedBrush" Value="{DynamicResource RootBgBrushHover}"/>
    </Style>

    <Style x:Key="MenuIconButton2" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource IconButton2}">
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource RootBgBrushHover}"/>
        <Setter Property="local:StylesHelper.PressedBrush" Value="{DynamicResource RootBgBrushHover}"/>
    </Style>

</ResourceDictionary>
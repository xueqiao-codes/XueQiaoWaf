<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:uiconvert="clr-namespace:XueQiaoFoundation.UI.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/SharedStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <uiconvert:RectangleHeightToRadiusConverter x:Key="RectangleHeightToRadiusConverter"/>

    <Style x:Key="XqToggleSwitchButtonDefault" 
           TargetType="{x:Type Controls:ToggleSwitchButton}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Height" Value="18" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ToggleSwitchButton}">
                    <Grid>
                        <Grid x:Name="PART_SwitchTrack"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              UseLayoutRounding="False">
                            <Rectangle x:Name="PART_SwitchBrushOuterBorder"
                                       Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{x:Null}"
                                       RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource RectangleHeightToRadiusConverter}, Mode=OneWay}"
                                       RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource RectangleHeightToRadiusConverter}, Mode=OneWay}"
                                       Stroke="{DynamicResource BorderBrush2}"
                                       StrokeThickness="1" />
                            <Rectangle x:Name="PART_SwitchBrushBorder"
                                       Width="{TemplateBinding Width}"
                                       Height="{TemplateBinding Height}"
                                       Fill="{DynamicResource PrimaryBrush3}"
                                       Opacity="0"
                                       RadiusX="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource RectangleHeightToRadiusConverter}, Mode=OneWay}"
                                       RadiusY="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height, Converter={StaticResource RectangleHeightToRadiusConverter}, Mode=OneWay}"
                                       StrokeThickness="0" />
                            <Grid x:Name="PART_ThumbIndicator"
                                  Width="{TemplateBinding Height}"
                                  Height="{TemplateBinding Height}"
                                  HorizontalAlignment="Left">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="PART_ThumbTranslate" />
                                </Grid.RenderTransform>
                                <Ellipse x:Name="PART_ThumbIndicatorInner"
                                         Width="{TemplateBinding ThumbIndicatorWidth}"
                                         Height="{TemplateBinding ThumbIndicatorWidth}"
                                         Fill="{DynamicResource BorderBrush2}" />
                            </Grid>
                        </Grid>
                        <Thumb x:Name="PART_DraggingThumb">
                            <Thumb.Template>
                                <ControlTemplate>
                                    <Rectangle Fill="Transparent" />
                                </ControlTemplate>
                            </Thumb.Template>
                        </Thumb>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--  Checked  -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_SwitchBrushOuterBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_ThumbIndicatorInner" Property="Fill" Value="{DynamicResource ForegroundInPrimaryBgBrush}" />
                        </Trigger>
                        <!--  MouseOver  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="IsEnabled" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_SwitchBrushOuterBorder" Property="Stroke" Value="{DynamicResource PrimaryBrush3}" />
                        </MultiTrigger>
                        <!--  Pressed  -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Fill" Value="{DynamicResource BorderBrush1}" />
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_SwitchBrushOuterBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_ThumbIndicatorInner" Property="Fill" Value="{DynamicResource ContentBrush1}" />
                        </Trigger>
                        <!--  Disabled  -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Fill" Value="{DynamicResource BorderBrush3}" />
                            <Setter TargetName="PART_SwitchBrushBorder" Property="Opacity" Value="1" />
                            <Setter TargetName="PART_SwitchBrushOuterBorder" Property="Opacity" Value="0" />
                            <Setter TargetName="PART_ThumbIndicatorInner" Property="Fill" Value="{DynamicResource BorderBrush2}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_SwitchBrushOuterBorder" Property="Stroke" Value="{DynamicResource BorderBrush2}" />
                            <Setter TargetName="PART_ThumbIndicatorInner" Property="Fill" Value="{DynamicResource BorderBrush2}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ThumbIndicatorWidth" Value="10" />
        <Setter Property="Width" Value="40" />
    </Style>

    <Style x:Key="XqToggleSwitchDefault"
           TargetType="{x:Type Controls:ToggleSwitch}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="ContentDirection" Value="RightToLeft" />
        <Setter Property="Controls:ControlsHelper.HeaderFontSize" Value="{DynamicResource RegularTitleFontSize}" />
        <Setter Property="Controls:ControlsHelper.HeaderMargin" Value="0 0 0 5" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Padding" Value="0 0 2 0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ThumbIndicatorWidth" Value="10" />
        <Setter Property="ToggleSwitchButtonStyle" Value="{StaticResource XqToggleSwitchButtonDefault}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:ToggleSwitch}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid Margin="{TemplateBinding Padding}" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="firstCol" Width="*" />
                                <ColumnDefinition x:Name="secCol" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <ContentControl x:Name="Header"
                                            Grid.ColumnSpan="2"
                                            Margin="{TemplateBinding Controls:ControlsHelper.HeaderMargin}"
                                            Content="{TemplateBinding Header}"
                                            ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                            FontFamily="{TemplateBinding HeaderFontFamily}"
                                            FontSize="{TemplateBinding Controls:ControlsHelper.HeaderFontSize}"
                                            FontWeight="{TemplateBinding Controls:ControlsHelper.HeaderFontWeight}"
                                            IsTabStop="False" />
                            <ContentControl x:Name="Content"
                                            Grid.Row="1"
                                            Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Content="{TemplateBinding Content}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            IsTabStop="False" />
                            <Controls:ToggleSwitchButton x:Name="Switch"
                                                         Grid.Row="1"
                                                         Grid.Column="1"
                                                         VerticalAlignment="Center"
                                                         Background="{TemplateBinding Background}"
                                                         FocusVisualStyle="{x:Null}"
                                                         IsChecked="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                         OffSwitchBrush="{TemplateBinding OffSwitchBrush}"
                                                         OnSwitchBrush="{TemplateBinding OnSwitchBrush}"
                                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                         Style="{TemplateBinding ToggleSwitchButtonStyle}"
                                                         ThumbIndicatorBrush="{TemplateBinding ThumbIndicatorBrush}"
                                                         ThumbIndicatorDisabledBrush="{TemplateBinding ThumbIndicatorDisabledBrush}"
                                                         ThumbIndicatorWidth="{TemplateBinding ThumbIndicatorWidth}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Header"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.3"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Content"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.3"
                                                         Duration="0" />
                                        <DoubleAnimation Storyboard.TargetName="Switch"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         To="0.75"
                                                         Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="Content" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Content">
                                <Setter.Value>
                                    <Binding Mode="TwoWay"
                                             Path="OnLabel"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="False" />
                                <Condition Property="Content" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Content" Property="Content">
                                <Setter.Value>
                                    <Binding Mode="TwoWay"
                                             Path="OffLabel"
                                             RelativeSource="{RelativeSource TemplatedParent}" />
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Header}" Value="{x:Null}">
                            <Setter TargetName="Header" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger Property="ContentDirection" Value="RightToLeft">
                            <Setter Property="Padding" Value="2 0 0 0" />
                            <Setter TargetName="Content" Property="Grid.Column" Value="1" />
                            <Setter TargetName="Switch" Property="Grid.Column" Value="0" />
                            <Setter TargetName="firstCol" Property="Width" Value="Auto" />
                            <Setter TargetName="secCol" Property="Width" Value="*" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
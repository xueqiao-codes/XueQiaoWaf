<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:XueQiaoFoundation.UI.Controls"
                    xmlns:local="clr-namespace:XueQiaoFoundation.UI.Styles">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/CalendarStyles.xaml" />
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/ButtonStyles.xaml" />
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/SharedStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DayPrevNextButtonStyle"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource IconButton1}">
        <Setter Property="Width" Value="18"/>
        <Setter Property="Height" Value="18"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="DayDatePickerDefault" 
           TargetType="{x:Type controls:DayDatePicker}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Background" Value="{DynamicResource BossyControlBgBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush2}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="local:StylesHelper.FocusedBorderBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2,4" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Watermark" Value="Select a date"/>
        <Setter Property="local:DayDatePickerBehaviour.CloseDropDownWhenSelectedDate" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:DayDatePicker}">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding local:StylesHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Padding="{TemplateBinding Padding}">
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="PrevButtonColumn" Width="Auto"/>
                                    <ColumnDefinition x:Name="TitleButtonColumn" Width="*" />
                                    <ColumnDefinition x:Name="NextButtonColumn" Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="PART_DayPreviousButton"
                                    Grid.Column="0"
                                    Style="{StaticResource DayPrevNextButtonStyle}">
                                    <PathGeometry Figures="M288.75,232.25 L288.75,240.625 L283,236.625 z" />
                                </Button>

                                <Button 
                                    x:Name="PART_SelectedDayTitleButton"
                                    Grid.Column="1"
                                    Margin="8,0,8,0"
                                    Style="{StaticResource FlatContentButtonStyle}"
                                    HorizontalAlignment="Stretch"
                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                    FontSize="{TemplateBinding FontSize}"
                                    Foreground="{TemplateBinding Foreground}">

                                </Button>

                                <Button x:Name="PART_DayNextButton"
                                    Grid.Column="2"
                                    Style="{StaticResource DayPrevNextButtonStyle}">
                                    <PathGeometry Figures="M282.875,231.875 L282.875,240.375 L288.625,236 z" />
                                </Button>
                            </Grid>
                        </Border>

                        <Popup x:Name="PART_CalendarPopup"
                               AllowsTransparency="True"
                               Focusable="False"
                               Placement="Bottom"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="None"
                               StaysOpen="False">
                            <Grid MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{Binding MaxDropDownHeight, RelativeSource={RelativeSource TemplatedParent}}"
                                  Margin="4" 
                                  Effect="{DynamicResource BossyControlShadowEffect}"
                                  Background="{DynamicResource RootBgBrush}"
                                  x:Name="PopupBorder">
                                <Calendar x:Name="PART_Calendar"
                                        BorderBrush="Transparent"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        SelectionMode="SingleDate" />
                            </Grid>
                        </Popup>
                        
                        <Border x:Name="DisabledVisualElement" 
                                Background="Transparent"
                                IsHitTestVisible="False"
                                Visibility="Collapsed"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.HoverBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>
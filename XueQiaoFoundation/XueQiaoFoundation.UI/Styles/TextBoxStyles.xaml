<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XueQiaoFoundation.UI.Styles"
                    xmlns:Controls="clr-namespace:XueQiaoFoundation.UI.Controls"
                    xmlns:uiconvert="clr-namespace:XueQiaoFoundation.UI.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/SharedStyles.xaml" />
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/ScrollBarStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <uiconvert:IsStringNullOrEmpty2VisibilityConverter x:Key="IsStringNullOrEmpty2Collapsed" ReturnVisibilityWhenResultTrue="Collapsed"/>

    <!-- TextBox error template -->
    <ControlTemplate x:Key="TextBoxErrorTemplate">
        <StackPanel Orientation="Vertical">
            <AdornedElementPlaceholder x:Name="placeholder">
                <Border
                    Background="{x:Null}"
                    BorderBrush="{Binding ElementName=placeholder, Path=AdornedElement.(local:StylesHelper.ValidationErrorBorderBrush)}"
                    BorderThickness="1" 
                    CornerRadius="{Binding ElementName=placeholder, Path=AdornedElement.(local:StylesHelper.CornerRadius)}"
                    SnapsToDevicePixels="{Binding ElementName=placeholder, Path=AdornedElement.SnapsToDevicePixels}"
                    x:Name="Border">
                    <Path
                        Fill="{Binding ElementName=placeholder, Path=AdornedElement.(local:StylesHelper.ValidationErrorBorderBrush)}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        ToolTipService.ShowDuration="30000"
                        ToolTip="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent, FallbackValue={x:Null}}">
                        <Path.Data>
                            <PathGeometry>
                                <PathFigure IsClosed="True" StartPoint="0,0">
                                    <LineSegment Point="10,0"/>
                                    <LineSegment Point="10,10"/>
                                </PathFigure>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </Border>
            </AdornedElementPlaceholder>
        </StackPanel>
    </ControlTemplate>

    <!-- TextBoxBase ScrollViewer Style。To Avoid issue. href="https://stackoverflow.com/questions/16424739/textbox-template-padding-issue" -->
    <ControlTemplate x:Key="TextBoxScrollViewerCT" TargetType="{x:Type ScrollViewer}">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                    Margin="0"
                                    Content="{TemplateBinding Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>

            <ScrollBar x:Name="PART_VerticalScrollBar"
                    Grid.Column="1"
                    Minimum="0.0"
                    Maximum="{TemplateBinding ScrollableHeight}"
                    ViewportSize="{TemplateBinding ViewportHeight}"
                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                    Cursor="Arrow"
                    AutomationProperties.AutomationId="VerticalScrollBar"
                    Style="{StaticResource ScrollBarDefault}"
                    local:StylesHelper.ScrollBarShowLineButton="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.ScrollBarShowLineButton), Mode=OneWay}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                    Orientation="Horizontal"
                    Grid.Row="1"
                    Minimum="0.0"
                    Maximum="{TemplateBinding ScrollableWidth}"
                    ViewportSize="{TemplateBinding ViewportWidth}"
                    Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                    Cursor="Arrow"
                    AutomationProperties.AutomationId="HorizontalScrollBar"
                    Style="{StaticResource ScrollBarDefault}"
                    local:StylesHelper.ScrollBarShowLineButton="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.ScrollBarShowLineButton), Mode=OneWay}"/>
        </Grid>
    </ControlTemplate>

    <!-- TextBoxBase -->
    <Style x:Key="TextBoxBaseStyleDefault"
           TargetType="{x:Type TextBoxBase}" 
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush2}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="local:StylesHelper.FocusedBorderBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.ValidationErrorBorderBrush" Value="{DynamicResource ErrorBrush1}"/>
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="{TemplateBinding local:StylesHelper.CornerRadius}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ScrollViewer x:Name="PART_ContentHost" 
                                          Template="{StaticResource TextBoxScrollViewerCT}"
                                          RenderOptions.ClearTypeHint="Enabled"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.HoverBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="local:StylesHelper.FocusedBorderBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}"/>
                <Setter Property="local:StylesHelper.HoverBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=BorderBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- TextBox -->
    <Style x:Key="TextBoxStyleDefault" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxBaseStyleDefault}" />

    <!-- PasswordBox -->
    <Style x:Key="PasswordBoxStyleDefault" 
           TargetType="{x:Type PasswordBox}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush2}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="local:StylesHelper.FocusedBorderBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.ValidationErrorBorderBrush" Value="{DynamicResource ErrorBrush1}"/>
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxErrorTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{TemplateBinding local:StylesHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer 
                            x:Name="PART_ContentHost" 
                            Template="{StaticResource TextBoxScrollViewerCT}"
                            RenderOptions.ClearTypeHint="Enabled"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.HoverBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RevealedTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Template="{StaticResource TextBoxScrollViewerCT}"
                                      Background="{x:Null}"
                                      IsTabStop="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RevealPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <ScrollViewer 
                            x:Name="PART_ContentHost"
                            Template="{StaticResource TextBoxScrollViewerCT}"
                            Background="{x:Null}"
                            IsTabStop="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RevealButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid Background="Transparent">
                        <Path x:Name="PART_PackIcon"
                            Width="16"
                            Height="16"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M12,9A3,3 0 0,0 9,12A3,3 0 0,0 12,15A3,3 0 0,0 15,12A3,3 0 0,0 12,9M12,17A5,5 0 0,1 7,12A5,5 0 0,1 12,7A5,5 0 0,1 17,12A5,5 0 0,1 12,17M12,4.5C7,4.5 2.73,7.61 1,12C2.73,16.39 7,19.5 12,19.5C17,19.5 21.27,16.39 23,12C21.27,7.61 17,4.5 12,4.5Z"
                            Fill="{DynamicResource IconBrush1}"
                            IsHitTestVisible="false"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_PackIcon" Property="Fill" Value="{DynamicResource IconBrush1Sel}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="PART_PackIcon" Property="Fill" Value="{DynamicResource IconBrush1Sel}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Button Revealed PasswordBox Style  -->
    <Style x:Key="CustomPasswordBoxDefault" TargetType="{x:Type Controls:CustomPasswordBox}" BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="local:CustomPasswordBoxHelper.Attach" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush2}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="local:StylesHelper.FocusedBorderBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.ValidationErrorBorderBrush" Value="{DynamicResource ErrorBrush1}"/>
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
        <Setter Property="AllowDrop" Value="False"/>
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource TextBoxErrorTemplate}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Controls:CustomPasswordBox}">
                    <Border Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{TemplateBinding local:StylesHelper.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*" />
                                <ColumnDefinition x:Name="RevealButtonColumn" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <PasswordBox 
                                x:Name="PART_PasswordBox"
                                Grid.Column="0"
                                Style="{StaticResource RevealPasswordBoxStyle}"
                                IsTabStop="{TemplateBinding IsTabStop}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                TabIndex="{TemplateBinding TabIndex}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                local:PasswordBoxHelper.Attach="True">
                            </PasswordBox>
                            <TextBox x:Name="RevealedPassword"
                                     Grid.Column="0"
                                     HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                     BorderThickness="0"
                                     CaretBrush="{TemplateBinding CaretBrush}"
                                     FontFamily="{TemplateBinding FontFamily}"
                                     FontSize="{TemplateBinding FontSize}"
                                     Foreground="{TemplateBinding Foreground}"
                                     SelectionBrush="{TemplateBinding SelectionBrush}"
                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                     Style="{StaticResource RevealedTextBoxStyle}"
                                     Text="{Binding ElementName=PART_PasswordBox, Path=(local:PasswordBoxHelper.Password), Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                     Visibility="Hidden" />
                            <Button x:Name="PART_RevealButton"
                                    Grid.Column="1"
                                    Margin="0"
                                    Style="{StaticResource RevealButtonStyle}"
                                    Visibility="{Binding ElementName=RevealedPassword, Path=Text, Converter={StaticResource IsStringNullOrEmpty2Collapsed}}" />

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.HoverBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger SourceName="PART_RevealButton" Property="IsPressed" Value="True">
                            <Setter TargetName="PART_PasswordBox" Property="Visibility" Value="Hidden" />
                            <Setter TargetName="RevealedPassword" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.ValidationErrorBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger SourceName="PART_PasswordBox" Property="IsFocused" Value="true">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(local:StylesHelper.FocusedBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
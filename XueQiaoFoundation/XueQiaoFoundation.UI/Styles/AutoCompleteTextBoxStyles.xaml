<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:XueQiaoFoundation.UI.Styles"
                    xmlns:actb="clr-namespace:XueQiaoFoundation.UI.Controls.AutoCompleteTextBox">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/SharedStyles.xaml" />
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/ListBoxStyles.xaml" />
        <ResourceDictionary Source="/XueQiaoFoundation.UI;component/Styles/ButtonStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!-- AutoCompleteTextBox 样式 -->
    <BooleanToVisibilityConverter x:Key="BoolToVisConverter" />

    <Style x:Key="TransparentTextBoxStyle"
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Foreground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Background="Transparent"
                                      Focusable="True"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BoxDropDownToggleButtonStyle" 
           TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid x:Name="BtnArrowBackground"
                          Background="Transparent">
                        <Path x:Name="BtnArrow"
                                  Width="8"
                                  Height="8"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M819.192105 1024L1638.384211 0H0l819.192105 1024z"
                                  Fill="{DynamicResource IconBrush1}"
                                  IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Stretch="Uniform" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="BtnArrowBackground" Property="IsMouseOver" Value="True">
                            <Setter TargetName="BtnArrow" Property="Fill" Value="{DynamicResource IconBrush1Sel}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True">
                            <Setter TargetName="BtnArrow" Property="Fill" Value="{DynamicResource IconBrush1Sel}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AutoCompleteTextBoxDefault"
           TargetType="{x:Type actb:AutoCompleteTextBox}" 
           BasedOn="{StaticResource GeneralControlStyle}">
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush2}" />
        <Setter Property="GroupStyle">
            <Setter.Value>
                <GroupStyle/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="local:StylesHelper.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="local:StylesHelper.FocusedBorderBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="local:StylesHelper.HoverBrush" Value="{DynamicResource PrimaryBrush3}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush2}" />
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type actb:AutoCompleteTextBox}">
                    <Grid>
                        <Border Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.CornerRadius), Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" >
                            <Grid Margin="{TemplateBinding BorderThickness}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="TextColumn" Width="*" />
                                    <ColumnDefinition x:Name="ToggleButtonColumn" Width="12" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton 
                                    x:Name="PART_DropDownToggle"
                                    Grid.Column="1"
                                    VerticalAlignment="Stretch"
                                    HorizontalAlignment="Stretch"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Foreground="{TemplateBinding Foreground}"
                                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                    KeyboardNavigation.IsTabStop="False"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Style="{StaticResource BoxDropDownToggleButtonStyle}"/>
                                <DockPanel Grid.Column="0">
                                    <ContentPresenter ContentSource="Icon"
                                                  x:Name="PART_Icon"
                                                  Visibility="{TemplateBinding IconVisibility}" />
                                    <Grid>
                                        <TextBlock 
                                            x:Name="PART_Watermark"
                                            Text="{TemplateBinding Watermark}"
                                            Visibility="Collapsed"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            Focusable="False"
                                            Foreground="{DynamicResource ContentBrush3}"
                                            FontStyle="Italic"/>
                                        <TextBox x:Name="PART_Editor"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Center"
                                             Style="{StaticResource ResourceKey=TransparentTextBoxStyle}"
                                             Text="{Binding Path=Text, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}" />
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </Border>
                        <Border x:Name="FocusBorder"
                                Background="{x:Null}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.CornerRadius), Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />
                        <Border x:Name="DisabledVisualElement"
                                Background="#FFFFFFFF"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.CornerRadius), Mode=OneWay}"
                                IsHitTestVisible="False"
                                Opacity="0.3"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="Collapsed" />

                        <!--  AllowsTransparency="true" fixes the redraw problem under windows vista/7 with a selected non aero theme  -->
                        <Popup x:Name="PART_Popup"
                               IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent},Mode=TwoWay}"
                               Width="{TemplateBinding ActualWidth}"
                               HorizontalOffset="0"
                               AllowsTransparency="True"
                               PopupAnimation="Slide"
                               Focusable="False">
                            <Grid Margin="4" 
                                  MinHeight="25"
                                  MaxHeight="600"
                                  Effect="{DynamicResource BossyControlShadowEffect}"
                                  Background="{DynamicResource RootBgBrush}"
                                  x:Name="PopupBorder">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter 
                                    Grid.Row="0" 
                                    ContentSource="LoadingContent"
                                    Visibility="{Binding Path=IsLoading, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ResourceKey=BoolToVisConverter}}" />
                                <ListBox 
                                    Grid.Row="1" 
                                    x:Name="PART_Selector"
                                    ItemTemplate="{TemplateBinding ItemTemplate}"
                                    ItemTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    Focusable="False"
                                    BorderThickness="0"
                                    Style="{StaticResource ListBoxDefault}"
                                    ItemContainerStyle="{StaticResource ListBoxItemStyleDefault}"/>
                            </Grid>
                        </Popup>
                        
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupBorder"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Duration="00:00:00">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text"
                                 Value=""
                                 SourceName="PART_Editor">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="PART_Watermark" />
                        </Trigger>
                        <Trigger Property="IconPlacement"
                                 Value="Left">
                            <Setter Property="DockPanel.Dock"
                                    Value="Left"
                                    TargetName="PART_Icon" />
                        </Trigger>
                        <Trigger Property="IconPlacement"
                                 Value="Right">
                            <Setter Property="DockPanel.Dock"
                                    Value="Right"
                                    TargetName="PART_Icon" />
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.HoverBrush)}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger SourceName="PART_Editor" Property="IsFocused" Value="True">
                            <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.FocusedBorderBrush)}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.FocusedBorderBrush)}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="FocusBorder" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(local:StylesHelper.FocusedBorderBrush)}" />
                            <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>